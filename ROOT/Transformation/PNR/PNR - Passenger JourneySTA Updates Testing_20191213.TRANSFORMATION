{"job":{"components":{"64922":{"id":64922,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":480,"y":208,"width":32,"height":32,"inputConnectorIDs":[64926],"outputConnectorIDs":[64928],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"generatejourneysta"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/*****************************************************************************************\n   calculate the journeysta for every booked and flight add event\n\t\n    this logic assumes all the flight add and booked events for a passenger journey are in the staging table \n*****************************************************************************************/    \nSELECT * FROM (\nSELECT \n--pfe.bookingdatetimeutc\npfe.pnr\n--,\n,pfe.eventdatetimeutc\n,pfe.eventname\n,pfe.passengerid\n,pfe.departuredate\n,pfe.journeynumber\n--,pfe.segmentnumber\n--,pfe.legnumber\n--,pfe.flightnumber\n--,pfe.carriercode\n--,pfe.sta  \n--,pfe.journeysta\n--,'|->' AS newlogic\n/* update the journeysta when there is a booked or flight added event and when the event occurred before the departuredate */\n--,CASE WHEN  eventname IN ('BOOKED','FLIGHT ADDED') AND pfe.eventdatetimeutc < pfe.departuredate THEN  scheduled.flightnumber ELSE NULL END AS scheduled_flightnumber\n--,CASE WHEN  eventname IN ('BOOKED','FLIGHT ADDED') AND pfe.eventdatetimeutc < pfe.departuredate  THEN  scheduled.departuredate ELSE NULL END AS scheduled_departuredate\n,CASE WHEN  eventname IN ('BOOKED','FLIGHT ADDED') AND pfe.eventdatetimeutc < pfe.departuredate AND ISNULL(eventreason,'') = ''  THEN scheduled.sta \n\t\tWHEN eventname IN ('BOOKED') AND pfe.eventdatetimeutc >= pfe.departuredate THEN scheduled.sta \n\t\tELSE NULL END AS journeysta_new\nFROM (\nSELECT \n\t--bookingdatetimeutc\n\tpnr\n\t--,\n    ,eventdatetimeutc\n\t,eventname\n    ,eventreason\n\t,passengerid\n\t,departuredate\n--\t,journeysta\n\t,journeynumber\n--\t,segmentnumber\n--    ,legnumber\n--\t,flightnumber\n--\t,carriercode\n--    ,sta\n\t/* ################# get last flight of the journey ########*/\t\n\t/*get the last flight currently scheduled for the passenger and journey based on the last flight of the last segment and legnumber in the version table */\n  ,(SELECT TOP 1 pjlv1.inventorylegid\n\tFROM ods.passengerjourneysegmentversion AS pjsv\n\t\t\tINNER JOIN ods.passengerjourneylegversion AS pjlv1\n\t\t\tON pjsv.segmentid = pjlv1.segmentid AND pjsv.passengerid = pjlv1.passengerid\n\t        --INNER JOIN public.airport AS a\n            --ON pjsv.departurestation = a.airportcode\t\t\n\tWHERE pjsv.passengerid = pfe.passengerid \n\tAND pjsv.journeynumber = pfe.journeynumber \n\tAND pjsv.departuredate = CAST(pfe.departuredate AS date)\n\tAND pjlv1.versionstartutc <=  pfe.eventdatetimeutc\n    AND EXISTS (SELECT 1 FROM ods.inventorylegversion AS ilv\n\t\t\t\tWHERE ilv.carriercode = 'PD'\n\t\t\t\tAND ilv.inventorylegid = pjlv1.inventorylegid)\n    /*return the latest segment, legnumber flight for the most recent version record prior or equal to the current event */\n\t ORDER BY pjsv.segmentnumber DESC, pjlv1.legnumber DESC, pjlv1.versionstartutc DESC, pjlv1.versionendutc  DESC\n   ) AS jounrneystainventorylegid   \nFROM $T{stage.pnrpassengereventcalc}  AS pfe\nWHERE eventname NOT IN ('UNKNOWN PAX EVENT') /*exclude unknown events if they exist */ \nAND  pnr IN \n('BESSQB','G4RHYS','B28UQY','D7LSXJ','K95WHT','G96VRT','K8NVJG','JDLHWH','A27ESY',\n'LYY17A','B4SMTC','BE1U5B','B7JS9G','A5H57M','LYY17A','B4SMTC','BE1U5B','B7JS9G','A5H57M','LYQ3WQ','N3PTHV','DF8BYB',\n'X1T8UB','Z79N8M','KCI4SK','UY8WUT','GERQUR','T3LD7V','N3PTHV','VD5LMK','H53VMC','A7UPUW','AC489H','BDJ48R','JY4W6A',\n'T8N5UJ','T8N5UJ','QBCLNA','DYBUMA','XE9SMH','T6ELPP','C3PIMF','R76MJM','GCFMYK','FCC36H','D6WUKZ','H7SKVJ','I6DQ4Z',\n'P6SLFM','G4RHYS','DEWVGB','B816WW','PDUWSH','F85N2T','KC1J2X','N3CJHI','R7K8VM','Q8YTPJ','YB54XD','P955NG','KEGNRE',\n'A1EBHL','N9RWVT',\n'LYQ3WQ','N3PTHV','DF8BYB','X1T8UB','Z79N8M','KCI4SK','UY8WUT','GERQUR','T3LD7V','N3PTHV','VD5LMK','H53VMC','A7UPUW','AC489H',\n'BDJ48R','JY4W6A','T8N5UJ','T8N5UJ','QBCLNA','DYBUMA','XE9SMH','T6ELPP','C3PIMF','R76MJM','GCFMYK','FCC36H','D6WUKZ','H7SKVJ',\n'I6DQ4Z','P6SLFM','G4RHYS','DEWVGB','B816WW','PDUWSH','F85N2T','KC1J2X','N3CJHI','R7K8VM','Q8YTPJ','YB54XD','P955NG','KEGNRE',\n'A1EBHL','V52RRF','K96YMT','EC8J9H','E6LU8J','E7G33G','IYLWQA','V52RRF','P9ZLKG','MCEFNK','MY6H7A','U2WNJL','S63HWC','A51DMP',\n'LCPIJX','H2HJPY','F16I8L','B5TV7Z','S4CPSV','BCTFTH','BEZ2FR','S894KJ','M5P4KP','ZCJMXN','Q3P9TI','WZV1MR','B5CWWP','P6VB7Z',\n'M8IMSW','A6TEHJ','L85CYJ','Y2B14L','D2C5SY','H2KMTY','W1YMJB','SZPFPR','Q4VN8C','U3NHGI','VYLTSD','ABC94X','K4278S','V29N6L','G3PGYV',\n'E6WDJZ','R7E43J','J7T7UJ','C2CCUY','O3PB7F','PBPMRN','G383YI','TEQZ9R','QBM1NN','S7I76J','K3J5JV','P2JUPL','P19VWB','X9UIWG',\n'JY1PHQ','ME83GE','P4C4HF','C2B44V','CB1P6K','AYS1VN','S7I76J','CYSU2K','GF94TB','HZQGXB','FB7R8K','QBPQQN','F759VZ','X9U76D',\n'J5ZE8P','B8BZVG','BCJHKH','M6133M','O3MISI','P9ENGT','B1E7JL','VETR6R','C5IL9M','S2UCSL','L2BRRL','PDMJQH','K6WDMM','C5CURP',\n'K7115J','KB1BUA','P3MYRI','K4K99C','Y5F3VF','D2VL4F','O59G7P','Y5DCUF','JCV94U','R5JG9P','BDUV7B','PYB33A','ID34KH','C4DDVS',\n'I3YKFV','N9KE3Q','N5KEVC','R1EHVB','GYGTNA','H576SC','LEC6NE','TY2R2Q','W944PW')\n/*  \nAND EXISTS (SELECT 1 FROM stage.pnrpassengereventlist AS ppel\n\t\t\t\tWHERE ppec.pnr = ppel.pnr)\n*/\n) AS pfe\nLEFT JOIN ods.inventorylegversion AS scheduled\n  ON scheduled.inventorylegid = pfe.jounrneystainventorylegid \n  AND pfe.eventdatetimeutc >= scheduled.versionstartutc\n  AND pfe.eventdatetimeutc < scheduled.versionendutc\n)\nWHERE journeysta_new IS NOT NULL"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"64923":{"id":64923,"inputCardinality":"ZERO","outputCardinality":"MANY","implementationID":1354890871,"x":272,"y":208,"width":32,"height":32,"inputConnectorIDs":[],"outputConnectorIDs":[64926],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage.pnrpassengereventcalc"}}}},"visible":true},"2":{"slot":2,"name":"Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengereventcalc"}}}},"visible":true},"3":{"slot":3,"name":"Column Names","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"passengerid"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"journeynumber"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"eventname"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"segmentnumber"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"eventdatetimeutc"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"departuredate"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"pnr"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"eventreason"}}}},"visible":true},"4":{"slot":4,"name":"Trim Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"5":{"slot":5,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"64924":{"id":64924,"inputCardinality":"ONE","outputCardinality":"ZERO","implementationID":-1848704949,"x":880,"y":208,"width":32,"height":32,"inputConnectorIDs":[64927],"outputConnectorIDs":[],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage.pnrpassengereventcalc_update"}}}},"visible":true},"2":{"slot":2,"name":"Target Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengereventcalc"}}}},"visible":true},"3":{"slot":3,"name":"Fix Data Type Mismatches","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"4":{"slot":4,"name":"Column Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengereventcalcid"},"2":{"slot":2,"type":"STRING","value":"pnrpassengereventcalcid"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"journeysta_new"},"2":{"slot":2,"type":"STRING","value":"journeysta_new"}}}},"visible":true},"5":{"slot":5,"name":"Unique Keys","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengereventcalcid"}}}},"visible":true},"6":{"slot":6,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"stage"}}}},"visible":true},"7":{"slot":7,"name":"Update Strategy","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Update/Insert"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"64925":{"id":64925,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":672,"y":208,"width":32,"height":32,"inputConnectorIDs":[64928],"outputConnectorIDs":[64927],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"journeystaupdate"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/*****************************************************************\n\tjoin on the calc table to get all the event records \n    after the change in the journeysta to be updated\n    \n    sort the updates in chronological order to ensure the updates \n    are made in order\n******************************************************************/\n\nSELECT \npnrpassengereventcalcid, journeysta_new\n--,pnr\n--,passengerid\n--,journeynumber\nFROM (SELECT pph.pnrpassengereventcalcid, upd.journeysta_new\n\t,RANK() OVER (PARTITION BY pph.pnr, pph.journeynumber, pph.passengerid, pph.eventdatetimeutc ORDER BY upd.eventdatetimeutc DESC) AS rankupdate\n\tFROM stage.pnrpassengereventcalc AS pph  \n\tINNER JOIN $T{generatejourneysta} AS upd\n\tON pph.pnr = upd.pnr \n\tAND pph.journeynumber = upd.journeynumber\n\tAND pph.passengerid = upd.passengerid  \n\tAND pph.eventdatetimeutc  >= upd.eventdatetimeutc) \nWHERE rankupdate = 1"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"}},"connectors":{"64928":{"id":64928,"sourceID":64922,"targetID":64925},"64926":{"id":64926,"sourceID":64923,"targetID":64922},"64927":{"id":64927,"sourceID":64925,"targetID":64924}},"canUndo":false,"undoCommand":"","undoCreated":-1,"canRedo":false,"redoCommand":"","redoCreated":-1,"notes":{"64920":{"id":64920,"x":225,"y":25,"width":523,"height":79,"text":"Calculate journeysta for each passenger journey\n\nupdated: 2019-12-12","colour":"e6e63c"},"64921":{"id":64921,"x":402,"y":138,"width":158,"height":144,"text":"look up STA based on the latest flight at the time of the event","colour":"e6e63c"}},"noteConnectors":{},"variables":{},"grids":{}},"info":{"name":"PNR - Passenger JourneySTA Updates Testing_20191213","description":"determines the passenger's journeysta ","type":"TRANSFORMATION"}}