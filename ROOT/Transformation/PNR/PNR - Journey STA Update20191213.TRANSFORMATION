{"job":{"components":{"64933":{"id":64933,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":480,"y":208,"width":32,"height":32,"inputConnectorIDs":[64939],"outputConnectorIDs":[64937],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnr journey case"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT \npnr\n,journeynumber\n,passengerid\n--,eventname\n,eventdatetimeutc\n--,stdutc\n--,DATEDIFF(min, eventdatetimeutc,stdutc) AS timedifference\n--,segmentnumber\n--,journeysta\n,CASE \n\tWHEN eventname = 'FLIGHT ADDED' THEN\n\t    \n\t\tCASE --'FLIGHT ADDED' \n\t\t\t/* CASE #1 */\n\t\t\t/*updated 2019-11-21 */\n            --WHEN eventreason = 'MOVE' AND eventuser IN ('station','callcenter') AND prevdrop_eta IS NULL AND prevadded_eta IS NULL THEN NULL--journeysta\n            WHEN eventreason = 'MOVE' AND eventuser IN ('station','callcenter') THEN NULL--journeysta\n\t\t    --WHEN eventreason = 'IROP' AND prevdrop_eta IS NULL AND prevadded_eta IS NULL THEN NULL --journeysta\n            WHEN eventreason = 'IROP' THEN NULL --journeysta\n\t\t\t\n\t\t\t/* CASE #2 */\n\t\t\t--WHEN eventreason = 'VOLF' AND eta > prevdrop_eta AND prevadded_eta IS NULL THEN eta\n            WHEN eventreason = 'VOLF' AND eta > prevdrop_eta THEN eta\n\t\t\t--WHEN eventreason = 'MOVE' AND eventuser IN ('customer','gds') AND eta > prevdrop_eta AND prevadded_eta IS NULL THEN eta\n\t\t\tWHEN eventreason = 'MOVE' AND eventuser IN ('customer','gds') AND eta > prevdrop_eta THEN eta\n\t\t\t/* updated 2019-11-28 WHEN eventreason = '' AND eta > prevdrop_eta AND prevadded_eta IS NULL THEN eta*/\n            WHEN eventreason = '' AND eta > prevdrop_eta THEN eta\n\t\t\t\n\t\t\t/* CASE #3 */\n\t\t\tWHEN eventreason = 'VOLF' AND eta < prevdrop_eta AND prevadded_eventreason = 'MOVE' AND prevadded_eventuser IN ('station','callcenter') THEN NULL --journeysta\n\t\t\tWHEN eventreason = 'VOLF' AND eta < prevdrop_eta AND prevadded_eventreason = 'IROP' THEN NULL --journeysta\n\t\t\tWHEN eventreason = 'MOVE' AND eventuser IN ('customer','gds') AND eta < prevdrop_eta AND prevadded_eventreason = 'MOVE' AND prevadded_eventuser IN ('station','callcenter') THEN NULL --journeysta\n\t\t\tWHEN eventreason = 'MOVE' AND eventuser IN ('customer','gds') AND eta < prevdrop_eta AND prevadded_eventreason = 'IROP' THEN NULL --journeysta\n\t\t\tWHEN eventreason = '' AND eta < prevdrop_eta AND prevadded_eventreason = 'MOVE' AND prevadded_eventuser IN ('station','callcenter') THEN NULL --journeysta\n\t\t\tWHEN eventreason = '' AND eta < prevdrop_eta AND prevadded_eventreason = 'IROP' THEN NULL --journeysta\n\t\t\t\n\t\t\t/* CASE #4 */\n\t\t\tWHEN eventreason = 'VOLF' AND eta < prevdrop_eta AND prevdrop_eta > prevdrop_sta AND previousdropdelayminute >= 120 THEN NULL --journeysta\n\t\t\tWHEN eventreason = 'MOVE' AND eventuser IN ('customer','gds') AND eta < prevdrop_eta AND prevdrop_eta > prevdrop_sta AND previousdropdelayminute > 120 THEN NULL --journeysta\n\t\t\tWHEN eventreason = '' AND eta < prevdrop_eta AND prevdrop_eta > prevdrop_sta AND previousdropdelayminute > 120 THEN NULL --journeysta\n\t\t\t\n\t\t\t/* CASE #5 */\n\t\t\tWHEN eventreason = 'VOLF' AND eta < prevdrop_eta  THEN eta\n\t\t\tWHEN eventreason = 'MOVE' AND eventuser IN ('customer','gds') AND eta < prevdrop_eta THEN eta\n\t\t\t/* updated:2019-11-20 WHEN eventreason = '' AND eta < prevdrop_eta AND prevadded_eventreason = 'IROP' THEN eta*/\n            WHEN eventreason = '' AND eta < prevdrop_eta THEN eta\n\t\t\t\n\t\t\t/* CASE #7 */\n\t\t\t--720 minutes = 12 hours\n\t\t\tWHEN eventreason = 'SCHG' AND DATEDIFF(min, eventdatetimeutc,stdutc) <= 720 THEN NULL --journeysta\n\t\t\t\n\t\t\t/* CASE #8 */\n\t\t\tWHEN eventreason = 'SCHG' AND DATEDIFF(min, eventdatetimeutc,stdutc) > 720 THEN eta\n            \n            /* default to NULL --journeysta when a condition is not met */\n\t\t\tELSE \n\t\t\t\tNULL --journeysta\n\t\tEND \n\t\t\n\tWHEN eventname = 'FLIGHT ADDED STANDBY' THEN\n\t\t/* CASE #6 */\n\t\t/* when the event is Flight Added Standby - do nothing the journey sta stays the same */\n\t\tNULL /*journeysta*/\n        \n\t/* default to NULL when a condition is not met */\n\tELSE\n\t\tNULL /*journeysta*/\n\tEND AS newjourneysta\n--,previousdropdelayminute\t\n--,eventreason\n--,eventuser\n--,sta\n--,eta\n--,prevdrop_eta\n--,prevdrop_sta\n--,prevadded_eta\n--,prevadded_eventreason\n--,prevadded_eventuser\n\nFROM \n(\nSELECT \npfec2.pnr\n,pfec2.journeynumber\n--,pfec2.segmentnumber\n,pfec2.passengerid\n,pfec2.departuredate\n,pfec2.eventdatetimeutc\n--,pfec2.flightnumber\n,pfec2.eventuser\n,pfec2.eventname\n,pfec2.eta\n,pfec2.sta\n,pfec2.journeysta\n,pfec2.eventreason\n,prevdrop_ppec.eta  AS prevdrop_eta\n,prevdrop_ppec.sta  AS prevdrop_sta\n,prevdrop_ppec.eventreason AS prevdrop_eventreason\n--,prevadded_ppec.flightnumber\n--,prevadded_ppec.departurestation\n--,prevadded_ppec.arrivalstation\n,prevadded_ppec.eta AS prevadded_eta\n,prevadded_ppec.eventreason AS prevadded_eventreason\n,prevadded_ppec.eventuser AS prevadded_eventuser\n,DATEDIFF(min,prevdrop_ppec.sta,prevdrop_ppec.eta) AS  previousdropdelayminute\n--,pfec2.segmentid\n--,pfec2.legnumber\n,pfec2.stdutc\nFROM (SELECT * FROM (\nSELECT \n\tpnr\n    ,pnrpassengerhistoryid\n\t,journeynumber\n\t,segmentnumber\n    ,CAST(pfec.journeynumber AS varchar(2))+ CAST(pfec.segmentnumber AS varchar(2)) + CAST(pfec.legnumber AS varchar(2)) AS journeysegmentlegnumber\n\t,eventname\n\t,eventuser\n\t,journeysta\n\t,pfec.flightnumber\n\t,eta\n\t,sta\n\t,stdutc\n\t,eventdatetimeutc\n\t,eventreason\n\t,pfec.passengerid\n   \t,segmentid\n    ,pfec.legnumber\n\t,pfec.departuredate\n\t/* Previous Dropped Flight Event */\n\t,(SELECT TOP 1 pnrpassengerhistoryid \n\t\tFROM public.pnrpassengerhistory AS fltdrop\n\t\tWHERE fltdrop.carriercode = 'PD'  \n        AND fltdrop.passengerid = pfec.passengerid\n\t\tAND fltdrop.journeynumber = pfec.journeynumber \n\t\tAND fltdrop.segmentnumber = pfec.segmentnumber\n\t\tAND fltdrop.eventname = 'FLIGHT DROPPED'\n\t\tAND fltdrop.eventdatetimeutc <= pfec.eventdatetimeutc\n\t\tORDER BY fltdrop.eventdatetimeutc DESC) AS previousdropped_pnrpassengerhistoryid\n\t/* Previous Flight Added Event */\n\t,(SELECT TOP 1 pnrpassengerhistoryid \n\t\tFROM public.pnrpassengerhistory AS fltadd\n\t\tWHERE fltadd.carriercode = 'PD' \n        AND fltadd.passengerid = pfec.passengerid\n\t\tAND fltadd.journeynumber = pfec.journeynumber \n\t\tAND fltadd.segmentnumber = pfec.segmentnumber\n\t\tAND fltadd.eventname = 'FLIGHT ADDED'\n\t\tAND fltadd.eventdatetimeutc < pfec.eventdatetimeutc\n\t\tORDER BY fltadd.eventdatetimeutc DESC) AS previousadded_pnrpassengerhistoryid\t\n\t\n  /*only use the flight added for the last flight in the journey to determine if the journeysta gets updated */\n\t/*,(SELECT TOP 1 pnrpassengerhistoryid \n\t\tFROM public.pnrpassengerhistory AS flt\n\t\tWHERE flt.carriercode = 'PD'  \n        AND flt.passengerid = pfec.passengerid\n\t\tAND flt.journeynumber = pfec.journeynumber \n\t\tAND flt.eventname = 'FLIGHT ADDED'\n\t\tORDER BY flt.journeynumber, flt.segmentnumber DESC, flt.legnumber DESC) AS lastflightadd_pnrpassengerhistoryid\t\n\t*/\n  /*only use the last flight added standby for the flight in the journey to determine if the journeysta gets updated */\t\n\t/*\t\n  ,(SELECT TOP 1 pnrpassengerhistoryid \n\t\tFROM public.pnrpassengerhistory AS flt\n\t\tWHERE flt.carriercode = 'PD'  \n        AND flt.passengerid = pfec.passengerid\n\t\tAND flt.journeynumber = pfec.journeynumber \n\t\tAND flt.eventname = 'FLIGHT ADDED STANDBY'\n\t\tORDER BY flt.journeynumber, flt.segmentnumber DESC, flt.legnumber DESC) AS lastflightaddstandby_pnrpassengerhistoryid\t  \n  \t*/  \n  /*identify the flight added for the last flight in the journey to determine if the journeysta gets updated */\n\t,(SELECT TOP 1 CAST(flt.journeynumber AS varchar(2))+ CAST(flt.segmentnumber AS varchar(2)) + CAST(flt.legnumber AS varchar(2))\n\t\tFROM public.pnrpassengerhistory AS flt\n\t\tWHERE flt.carriercode = 'PD'  \n        AND flt.passengerid = pfec.passengerid\n\t\tAND flt.journeynumber = pfec.journeynumber \n\t\tAND flt.eventname IN ('BOOKED','BOOKED STANDBY')\n\t\tORDER BY flt.journeynumber, flt.segmentnumber DESC, flt.legnumber DESC) AS lastjourneysegmentlegnumber\nFROM $T{public.pnrpassengerhistory_src} AS pfec\nWHERE pfec.carriercode = 'PD'  \nAND EXISTS (SELECT 1 FROM stage.pnrpassengereventlist AS ppel\n\t\t\t\tWHERE pfec.pnr = ppel.pnr)  \nAND pfec.eventname IN ('FLIGHT ADDED','FLIGHT ADDED STANDBY') \n--AND pnr = 'A7UPUW'\n--AND pnr = 'BDJ48R'  \n--AND EXISTS (SELECT 1 FROM stage.pnrpassengereventlist AS ppl\n--            WHERE ppl.pnr = pfec.pnr\n--            AND ppl.passengerid = pfec.passengerid)\n)\nWHERE lastjourneysegmentlegnumber = journeysegmentlegnumber\n/*      \nWHERE (lastflightadd_pnrpassengerhistoryid = pnrpassengerhistoryid\nOR lastflightaddstandby_pnrpassengerhistoryid = pnrpassengerhistoryid)  \n*/\n /* testing pnrs  \nAND \n--### FLIGHT ADDED CASES ###\n(\n(pfec.pnr IN ('R49NNV','T8N5UJ')--CASE #1\nOR pfec.pnr IN ('V9DY5T','UDW7RX','V8TLWJ','P1B7UB','M42BQV') --CASE #2\nOR pfec.pnr IN ('L9WTYT','V8UCHW','PYC2SD','XEBGMH') --CASE #3\nOR pfec.pnr IN ('X1T8UB','QB1ESQ','Z79N8M','D34L6F')--CASE #4\nOR pfec.pnr IN ('E4393C','PB36YQ','U43IPI','GE3HKE','LYQ3WQ') --CASE #5\n\n--OR pfec.pnr IN () --CASE #7 --no examples\n\nOR pfec.pnr IN ('A3V9JS','C6MC9J','B4QRRC','A67URM','C3BHRV') --CASE #8\n)AND pfec.eventname = 'FLIGHT ADDED')\n\nOR \n(\n--### FLIGHT ADDED STANDBY CASES ###\n(\npfec.pnr IN ('IC48JK','P4ZQYI','L581YS','I8E3TW','J53N7P') --CASE #6\n) AND pfec.eventname = 'FLIGHT ADDED STANDBY')\ntesting pnrs */\n  \n) AS pfec2\n\nLEFT JOIN public.pnrpassengerhistory AS prevdrop_ppec\nON pfec2.previousdropped_pnrpassengerhistoryid\t= prevdrop_ppec.pnrpassengerhistoryid\nLEFT JOIN public.pnrpassengerhistory AS prevadded_ppec\nON pfec2.previousadded_pnrpassengerhistoryid = prevadded_ppec.pnrpassengerhistoryid\nORDER BY pnr, journeynumber, passengerid, eventdatetimeutc\n)\nWHERE newjourneysta IS NOT NULL\n\n"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"64934":{"id":64934,"inputCardinality":"ZERO","outputCardinality":"MANY","implementationID":1354890871,"x":272,"y":208,"width":32,"height":32,"inputConnectorIDs":[],"outputConnectorIDs":[64939],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public.pnrpassengerhistory_src"}}}},"visible":true},"2":{"slot":2,"name":"Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengerhistory"}}}},"visible":true},"3":{"slot":3,"name":"Column Names","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eventname"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"eventuser"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"eventdatetimeutc"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"passengerid"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"segmentid"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"legnumber"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"departuredate"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"pnr"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"journeynumber"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"segmentnumber"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"journeysta"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"flightnumber"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"eta"}}},"14":{"slot":14,"values":{"1":{"slot":1,"type":"STRING","value":"sta"}}},"15":{"slot":15,"values":{"1":{"slot":1,"type":"STRING","value":"stdutc"}}},"16":{"slot":16,"values":{"1":{"slot":1,"type":"STRING","value":"eventreason"}}},"17":{"slot":17,"values":{"1":{"slot":1,"type":"STRING","value":"carriercode"}}},"18":{"slot":18,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengerhistoryid"}}}},"visible":true},"4":{"slot":4,"name":"Trim Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"5":{"slot":5,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"64935":{"id":64935,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":656,"y":208,"width":32,"height":32,"inputConnectorIDs":[64937],"outputConnectorIDs":[64938],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"journeysta update"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/*****************************************************************\n\tjoin on the pnr history table to get all the event records \n    after the change in the journeysta to be updated\n    \n    sort the updates in chronological order to ensure the updates \n    are made in order\n******************************************************************/\nSELECT * FROM (\nSELECT \n--DISTINCT\npph.pnrpassengerhistoryid\n--,pph.eventname\n,pph.journeysta\n,pph.journeysta AS originaljourneysta\n,upd.newjourneysta\n--,pph.pnr\n--,pph.journeynumber\n--,pph.passengerid\n--,pph.eventdatetimeutc\n--,upd.eventdatetimeutc AS updeventdatetimeutc\n,RANK() OVER (PARTITION BY pph.pnr, pph.journeynumber, pph.passengerid, pph.eventdatetimeutc ORDER BY upd.eventdatetimeutc DESC) AS rankupdate\nFROM public.pnrpassengerhistory AS pph\nINNER JOIN $T{pnr journey case} AS upd\nON pph.pnr = upd.pnr\nAND pph.journeynumber = upd.journeynumber\nAND pph.passengerid = upd.passengerid\nAND pph.eventdatetimeutc  >= upd.eventdatetimeutc \n--AND pph.pnr ='BDJ48R' --test pnr\n) WHERE  rankupdate = 1"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"64936":{"id":64936,"inputCardinality":"ONE","outputCardinality":"ZERO","implementationID":-1848704949,"x":864,"y":208,"width":32,"height":32,"inputConnectorIDs":[64938],"outputConnectorIDs":[],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public.pnrpassengerhistory"}}}},"visible":true},"2":{"slot":2,"name":"Target Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengerhistory"}}}},"visible":true},"3":{"slot":3,"name":"Fix Data Type Mismatches","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"4":{"slot":4,"name":"Column Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengerhistoryid"},"2":{"slot":2,"type":"STRING","value":"pnrpassengerhistoryid"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"newjourneysta"},"2":{"slot":2,"type":"STRING","value":"journeysta"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"originaljourneysta"},"2":{"slot":2,"type":"STRING","value":"originaljourneysta"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"newjourneysta"},"2":{"slot":2,"type":"STRING","value":"journeystaupdate"}}}},"visible":true},"5":{"slot":5,"name":"Unique Keys","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"pnrpassengerhistoryid"}}}},"visible":true},"6":{"slot":6,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public"}}}},"visible":true},"7":{"slot":7,"name":"Update Strategy","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Update/Insert"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"}},"connectors":{"64937":{"id":64937,"sourceID":64933,"targetID":64935},"64938":{"id":64938,"sourceID":64935,"targetID":64936},"64939":{"id":64939,"sourceID":64934,"targetID":64933}},"canUndo":false,"undoCommand":"","undoCreated":-1,"canRedo":false,"redoCommand":"","redoCreated":-1,"notes":{"64930":{"id":64930,"x":230,"y":-63,"width":695,"height":185,"text":"Update the journey sta based on voluntary flight add events\n\njourney sta can be updated whenever there is a new PD FLIGHT ADDED or PD FLIGHT ADDED STANDBY event for a journey. passenger journeys with no flight add events after the booking are not updated.\n\nThe journeysta updates are only applied to the pnr and passengerid records in the pnrpassengerlist table. A WHERE clause is used to manage the # of records to process\n\nthe order of the flight added events have to be in chronological order to ensure the updates of the journeysta are correct. when there are 2 updates for a record. rank the last update as the rank 1 and ignore the other updates.\n\nupdated: 2019-11-21","colour":"e6e63c"},"64931":{"id":64931,"x":411,"y":165,"width":136,"height":149,"text":"\n\n\n\n\n\n\n\nupdate the journeysta based on case","colour":"e6e63c"},"64932":{"id":64932,"x":586,"y":167,"width":141,"height":142,"text":"\n\n\n\n\n\n\n\nprep the passenger journey records to be updated ","colour":"e6e63c"}},"noteConnectors":{},"variables":{},"grids":{}},"info":{"name":"PNR - Journey STA Update20191213","description":"update the journey sta based on voluntary changes","type":"TRANSFORMATION"}}