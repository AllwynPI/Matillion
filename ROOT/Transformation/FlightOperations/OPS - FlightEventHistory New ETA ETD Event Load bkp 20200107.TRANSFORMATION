{"job":{"components":{"76386":{"id":76386,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":224,"y":288,"width":32,"height":32,"inputConnectorIDs":[],"outputConnectorIDs":[76396],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ETA Event"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select eventname, eventdescription, eventdatetimeutc, carriercode, flightnumber, flightdate, departurestation, arrivalstation\nfrom\n(select\n'ETA' as eventname --\n, (case when arrivaloveralldelaycode >'' then 'delay code: '||arrivaloveralldelaycode||'; '||'delay time: '||arrivaloveralldelaytime||'; '\n\t\twhen arrivaloveralldelaytime > 0 then 'delay code: '||arrivaloveralldelaycode||'; '||'delay time: '||arrivaloveralldelaytime||'; '\n\t\telse '' end) eventdescription\n, effectivedatetimeutc eventdatetimeutc \n, carriercode\n, flightnumber\n, flightdate\n, departurestation\n, arrivalstation\n, leghashkey\n, sta\n, eta\n, ( case when rank() over (partition by flightnumber, flightdate, departurestation, arrivalstation,leghashkey order by effectivedatetimeutc) =1 then eta\n\t\telse LAG(eta,1) ignore nulls over(partition by flightnumber, flightdate, departurestation, arrivalstation,leghashkey order by effectivedatetimeutc) end) last_ETA\n\nFROM public.flightdetailhistory \nwhere eta >'1900-01-01'\n--AND effectivedatetimeutc > '${maxetadatetime}' \n AND EXISTS (SELECT 1 FROM public.flightdetailhistory AS fd\n\t\t\tWHERE LEFT(fd.leghashkey,26) = LEFT(flightdetailhistory.leghashkey,26)\n\t\t\tAND fd.effectivedatetimeutc > '${maxetadatetime}'\n            --AND fd.flightdate >='2017-11-01' AND fd.flightdate < '2018-11-01'\n            -- AND fd.flightdate >='2018-10-01' --AND fd.flightdate < '2018-11-01'\n\t\t\t)  \nand flightdetailhistoryid not in (select flightdetailhistoryid from public.flightdetailhistory where iropcode like 'IR%')\n) ETD_EVENT\nwhere Eta<>last_ETa\ngroup by eventname, eventdescription, eventdatetimeutc, carriercode, flightnumber, flightdate, departurestation, arrivalstation"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76387":{"id":76387,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":224,"y":112,"width":32,"height":32,"inputConnectorIDs":[],"outputConnectorIDs":[76398],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ETD Event"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT \n\teventname, eventdescription, eventdatetimeutc\n\t, carriercode, flightnumber, flightdate, departurestation, arrivalstation\nFROM\n(select\n\t'ETD' as eventname --\n\t, (case when departureoveralldelaycode >'' \n   \t\tthen 'delay code: '||departureoveralldelaycode||'; '||'delay time: '||departureoveralldelaytime||'; '\n\t\twhen departureoveralldelaytime >0 \n   \t\tthen 'delay code: '||departureoveralldelaycode||'; '||'delay time: '||departureoveralldelaytime||'; '\n\t\telse '' end) eventdescription\n\t, effectivedatetimeutc eventdatetimeutc \n\t, carriercode\n\t, flightnumber\n\t, flightdate\n\t, departurestation\n\t, arrivalstation\n\t, leghashkey\n\t, std\n\t, etd\n\t, ( case when rank() over (partition by flightnumber, flightdate, departurestation, arrivalstation,leghashkey order by effectivedatetimeutc) =1 \n   \t\tthen etd\n\t\telse LAG(etd,1) ignore nulls over(partition by flightnumber, flightdate, departurestation, arrivalstation,leghashkey order by effectivedatetimeutc) \n   end) last_ETD\nFROM public.flightdetailhistory \nWHERE etd > '1900-01-01' \n/* return all instances of a flight to rank the changes */\t\t\t\t\t\t\t\t  \nAND EXISTS (SELECT 1 FROM public.flightdetailhistory AS fd\n\t\t\tWHERE LEFT(fd.leghashkey,26) = LEFT(flightdetailhistory.leghashkey,26)\n\t\t\tAND fd.effectivedatetimeutc > '${maxetddatetime}'\n            --AND fd.flightdate >='2018-10-01' --AND fd.flightdate < '2018-11-01'\n\t\t\t)  \n/* do not include flights with return gate */\n and flightdetailhistoryid not in (select flightdetailhistoryid from public.flightdetailhistory \n                                  where iropcode like 'IR%')\n) ETD_EVENT\nwhere Etd <> last_ETD \ngroup by eventname, eventdescription, eventdatetimeutc, carriercode, flightnumber, flightdate, departurestation, arrivalstation"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76388":{"id":76388,"inputCardinality":"MANY","outputCardinality":"MANY","implementationID":-1841822228,"x":864,"y":208,"width":32,"height":32,"inputConnectorIDs":[76403,76405,76407],"outputConnectorIDs":[76400],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"union all events"}}}},"visible":true},"2":{"slot":2,"name":"Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"All Columns"}}}},"visible":true},"3":{"slot":3,"name":"Cast Types","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true},"4":{"slot":4,"name":"Add Source Component Column","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"5":{"slot":5,"name":"Remove duplicates","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76389":{"id":76389,"inputCardinality":"ONE","outputCardinality":"ZERO","implementationID":-1848704949,"x":1248,"y":208,"width":32,"height":32,"inputConnectorIDs":[76408],"outputConnectorIDs":[],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public.flighteventhistory"}}}},"visible":true},"2":{"slot":2,"name":"Target Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"flighteventhistory"}}}},"visible":true},"3":{"slot":3,"name":"Fix Data Type Mismatches","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":true},"4":{"slot":4,"name":"Column Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eventname"},"2":{"slot":2,"type":"STRING","value":"eventname"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"eventdescription"},"2":{"slot":2,"type":"STRING","value":"eventdescription"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"eventdatetimeutc"},"2":{"slot":2,"type":"STRING","value":"eventdatetimeutc"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"carriercode"},"2":{"slot":2,"type":"STRING","value":"carriercode"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"flightnumber"},"2":{"slot":2,"type":"STRING","value":"flightnumber"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"flightdate"},"2":{"slot":2,"type":"STRING","value":"flightdate"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"departurestation"},"2":{"slot":2,"type":"STRING","value":"departurestation"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"arrivalstation"},"2":{"slot":2,"type":"STRING","value":"arrivalstation"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"leghaskey"},"2":{"slot":2,"type":"STRING","value":"leghashkey"}}}},"visible":true},"5":{"slot":5,"name":"Unique Keys","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eventname"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"eventdatetimeutc"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"flightdate"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"flightnumber"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"departurestation"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"arrivalstation"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"carriercode"}}}},"visible":true},"6":{"slot":6,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"public"}}}},"visible":true},"7":{"slot":7,"name":"Update Strategy","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Update/Insert"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76390":{"id":76390,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":1104,"y":208,"width":32,"height":32,"inputConnectorIDs":[76400],"outputConnectorIDs":[76408],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"group eta etd events"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select distinct eventname,\n\t  listagg(eventdescription,';') within group (order by eventdatetimeutc) as eventdescription,\n      a.eventdatetimeutc, \n      a.flightnumber,\n      a.flightdate,\n      a.departurestation, \n      a.arrivalstation,\n      a.carriercode,\n      '' as leghaskey\nfrom $T{union all events} a\ngroup by eventname,\n         a.eventdatetimeutc,\n         a.flightnumber,\n         a.flightdate,\n         a.departurestation,\n         a.arrivalstation,\n         a.carriercode\n"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76391":{"id":76391,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":624,"y":112,"width":32,"height":32,"inputConnectorIDs":[76406,76397],"outputConnectorIDs":[76405],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ETD/ETA"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select 'ETD/ETA' as eventname, etd.eventdescription||';'||eta.eventdescription as eventdescription, \netd.eventdatetimeutc, \netd.carriercode, \netd.flightnumber, \netd.flightdate,\netd.departurestation, \netd.arrivalstation\nfrom $T{Replicate ETD} as etd\n\tinner join\n\t$T{Replicate ETA} as eta \n\ton (etd.eventdatetimeutc = eta.eventdatetimeutc and\n    \tetd.flightnumber = eta.flightnumber and \n    \tetd.flightdate = eta.flightdate and \n    \tetd.departurestation = eta.departurestation and \n        etd.arrivalstation = eta.arrivalstation)"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76392":{"id":76392,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":624,"y":208,"width":32,"height":32,"inputConnectorIDs":[76402,76404],"outputConnectorIDs":[76407],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ETD"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select eventname, \n\t   eventdescription,\n       eventdatetimeutc,\n       carriercode,\n       flightnumber,\n       flightdate,\n       departurestation,\n       arrivalstation\n       --,eta_departurestation\n       from\n          (select 'ETD' as eventname,\n                \t\t   etd.eventdescription,\n                           etd.eventdatetimeutc,\n                           etd.carriercode,\n                           etd.flightnumber,\n                           etd.flightdate,\n                           etd.departurestation,\n                           etd.arrivalstation,\n                           eta.departurestation eta_departurestation\n                            from $T{Replicate ETD} as etd\n                           left outer join\n                                 $T{Replicate ETA} as eta \n                                 on ( etd.eventdatetimeutc = eta.eventdatetimeutc and\n                                      etd.flightnumber = eta.flightnumber and\n                                      etd.flightdate = eta.flightdate and  \n                                      etd.departurestation = eta.departurestation and \n                                      etd.arrivalstation = eta.arrivalstation ) )\n                        where isnull(eta_departurestation,'N/A') = 'N/A'  --and eventdatetimeutc >'2019-10-01'\n                         \n"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76393":{"id":76393,"inputCardinality":"ZERO_OR_MANY","outputCardinality":"MANY","implementationID":-1266674941,"x":624,"y":288,"width":32,"height":32,"inputConnectorIDs":[76401,76399],"outputConnectorIDs":[76403],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ETA"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select eventname, eventdescription, eventdatetimeutc, carriercode, flightnumber, flightdate, departurestation, arrivalstation\n--,etd_departurestation \nfrom\n\t(select 'ETA' as eventname,\n     eta.eventdescription,\n     eta.eventdatetimeutc,\n     eta.carriercode,\n     eta.flightnumber, \n     eta.flightdate,\n     eta.departurestation, \n     eta.arrivalstation,\n \t NVL(etd.departurestation, 'N/A') etd_departurestation\n     from $T{Replicate ETD} as etd\n      right outer join\n      $T{Replicate ETA} as eta \n      \ton (etd.eventdatetimeutc = eta.eventdatetimeutc and \n            etd.flightnumber = eta.flightnumber and\n            etd.flightdate = eta.flightdate and \n            etd.departurestation = eta.departurestation and \n            etd.arrivalstation = eta.arrivalstation ) )\n\twhere isnull(etd_departurestation,'N/A') = 'N/A'  -- and eventdatetimeutc >'2019-11-01'\n    \n    "}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76394":{"id":76394,"inputCardinality":"ONE","outputCardinality":"MANY","implementationID":-1949249710,"x":352,"y":112,"width":32,"height":32,"inputConnectorIDs":[76398],"outputConnectorIDs":[76402,76406,76399],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Replicate ETD"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"},"76395":{"id":76395,"inputCardinality":"ONE","outputCardinality":"MANY","implementationID":-1949249710,"x":352,"y":288,"width":32,"height":32,"inputConnectorIDs":[76396],"outputConnectorIDs":[76401,76404,76397],"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Replicate ETA"}}}},"visible":true}},"exportMappings":{},"expectedFailure":null,"activationStatus":"ENABLED"}},"connectors":{"76397":{"id":76397,"sourceID":76395,"targetID":76391},"76396":{"id":76396,"sourceID":76386,"targetID":76395},"76399":{"id":76399,"sourceID":76394,"targetID":76393},"76398":{"id":76398,"sourceID":76387,"targetID":76394},"76401":{"id":76401,"sourceID":76395,"targetID":76393},"76400":{"id":76400,"sourceID":76388,"targetID":76390},"76403":{"id":76403,"sourceID":76393,"targetID":76388},"76402":{"id":76402,"sourceID":76394,"targetID":76392},"76405":{"id":76405,"sourceID":76391,"targetID":76388},"76404":{"id":76404,"sourceID":76395,"targetID":76392},"76407":{"id":76407,"sourceID":76392,"targetID":76388},"76406":{"id":76406,"sourceID":76394,"targetID":76391},"76408":{"id":76408,"sourceID":76390,"targetID":76389}},"canUndo":true,"undoCommand":"Set Parameter","undoCreated":1578413405056,"canRedo":false,"redoCommand":"","redoCreated":-1,"notes":{"76384":{"id":76384,"x":206,"y":-8,"width":250,"height":58,"text":"Identify new ETD, ETA or ETD/ETA events\n\nupdated:2019-12-05","colour":"e6e63c"},"76385":{"id":76385,"x":557,"y":22,"width":148,"height":124,"text":"merge the ETA & ETD events with the same eventdatetimeutc into a single event","colour":"e6e63c"}},"noteConnectors":{},"variables":{"maxetadatetime":{"definition":{"name":"maxetadatetime","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"2019-10-01"},"maxetddatetime":{"definition":{"name":"maxetddatetime","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"2019-10-01"}},"grids":{}},"info":{"name":"OPS - FlightEventHistory New ETA ETD Event Load bkp 20200107","description":"","type":"TRANSFORMATION"}}