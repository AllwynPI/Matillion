{"job":{"components":{"63080":{"id":63080,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-1872,"y":-48,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63113],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63081":{"id":63081,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-1744,"y":-48,"width":32,"height":32,"inputConnectorIDs":[63113],"outputSuccessConnectorIDs":[63107],"outputFailureConnectorIDs":[63123],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Last change date processed"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Get the latest changes updated in the flightdetailhistory table\n# The effectivedatetimeutc is the changetimeutc from the source flightdetailchange table\n###\n\ncursor = context.cursor()\n\nSQL = \"SELECT to_char(MAX(effectivedatetimeutc),'yyyy-mm-dd hh24:mi:ss') FROM public.flightdetailhistory\"\n\ncursor.execute(SQL)\nactdt = cursor.fetchone()[0]\n\n#print str(actdt)\n\ncontext.updateVariable(\"last_changetimeutc\", str(actdt))\n\n## to reload a date range manually update the last and max changetimeutc to specify the date range ##\n#context.updateVariable(\"last_changetimeutc\", str(\"2019-12-23\"))\n#context.updateVariable(\"max_changetimeutc\", str(\"2019-12-27\"))\n##\n\nprint \"last_changetimeutc: \" + str(last_changetimeutc)\nprint \"max_changetimeutc: \" + str(max_changetimeutc)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63082":{"id":63082,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-416,"y":-112,"width":32,"height":32,"inputConnectorIDs":[63110],"outputSuccessConnectorIDs":[63098],"outputFailureConnectorIDs":[63120],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistory_Load_Change"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistory_Load"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63083":{"id":63083,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-741198691,"x":-704,"y":-112,"width":32,"height":32,"inputConnectorIDs":[63099],"outputSuccessConnectorIDs":[63100],"outputFailureConnectorIDs":[63121],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"},"2":{"slot":2,"fromId":null,"fromName":"Message","mapTo":"Errormessage"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Extract Flight Details Changes"}}}},"visible":true},"2":{"slot":2,"name":"Database Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Microsoft SQL Server"}}}},"visible":true},"3":{"slot":3,"name":"Connection URL","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${db_server_url_operations}"}}}},"visible":true},"6":{"slot":6,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${db_user_operations}"}}}},"visible":true},"7":{"slot":7,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":"${db_pswd_operations}"}}}},"visible":true},"8":{"slot":8,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"WITH flightdetail AS\n( SELECT \"action\",LegHashKey,ChangeTimeUTC,CarrierCode,flightnumber,flightdate,departurestation,arrivalstation,TailNum\n,UncorrectedTailNum ,DelayCode--,DepDelayCode1--,DepDelayCode2--,DepDelayCode3\n,IROPStatus, SDT,SAT, EDT, EAT,EDTC,INTime,INTime_UTC,OFFTime,OFFTime_UTC,ONTime,ONTime_UTC,OUTTime,OUTTime_UTC,STA_UTC\n,STD_UTC,ETA_UTC,ETD_UTC,ArrDelayCode1,ArrDelayTime1,ArrDelayControllable1,ArrDelayCode2,ArrDelayTime2,\nArrDelayControllable2,DepDelayCode1,DepDelayTime1,DepDelayControllable1,DepDelayCode2,DepDelayTime2,DepDelayControllable2\n,DepDelayCode3,DepDelayTime3,DepDelayControllable3,ArrOverallDelayCalcTime,ArrOverallDelayCode,\nArrOverallDelayControllable,DepOverallDelayCalcTime,DepOverallDelayCode,DepOverallDelayControllable,PairingId\nfrom  (SELECT\t/*include these columns to identify a unique record */\n\t\t\t'update' Action\n\t\t\t,A.LegHashKey\n\t\t\t,A.ChangeTimeUTC\n\t\t\t,A.ColumnName\n\t\t\t,CASE WHEN substring(A.LegHashKey,12,3)='POE' THEN 'PD' else substring(A.LegHashKey,12,3) end as CarrierCode\n\t\t\t,replace(substring(A.LegHashKey,15,4),' ','') flightnumber\n\t\t\t,substring(A.LegHashKey,1,10) flightdate\n\t\t\t,substring(A.LegHashKey,20,3) departurestation\n\t\t\t,substring(A.LegHashKey,24,3) arrivalstation\n            ,A.New --return the new value of the attribute\n    FROM dbo.FlightDetailsChanges A \n\tleft outer join \n \tdbo.FlightDetails P on (a.LegHashKey=p.LegHashKey)\n where \n    \n     EXISTS (SELECT 1 FROM dbo.FlightDetailsChanges AS fdc2\n\t\t\tWHERE LEFT(a.leghashkey,26) = LEFT(fdc2.leghashkey,26)\n            AND  fdc2.ChangeTimeUTC >='${last_changetimeutc}' AND ChangeTimeUTC < '${max_changetimeutc}'\n            )  \n       \n     AND (A.ColumnName IN ('DelayCode','DepDelayCode1','DepDelayCode2','DepDelayCode3','TailNum','UncorrectedTailNum','IROPStatus', 'SDT','SAT', 'EDT', 'EAT',\n\t'EDTC','INTime','INTime_UTC','OFFTime','OFFTime_UTC','ONTime','ONTime_UTC','OUTTime','OUTTime_UTC','STA_UTC','STD_UTC','ETA_UTC','ETD_UTC','ArrDelayCode1',\n\t'ArrDelayTime1','ArrDelayControllable1','ArrDelayCode2','ArrDelayTime2','ArrDelayControllable2','DepDelayCode1','DepDelayTime1','DepDelayControllable1',\n\t'DepDelayCode2','DepDelayTime2','DepDelayControllable2','DepDelayCode3','DepDelayTime3','DepDelayControllable3','ArrOverallDelayCalcTime','ArrOverallDelayCode',\n\t'ArrOverallDelayControllable','DepOverallDelayCalcTime','DepOverallDelayCode','DepOverallDelayControllable','PairingId') or ACTION in ('INSERT','UPDATE'))\n) AS SourceTable PIVOT(MAX(New) FOR ColumnName IN \n\t--specify the columns to create\n\t(DelayCode\n\t,DepDelayCode1\n\t,DepDelayCode2\n\t,DepDelayCode3\n\t,TailNum\n\t,UncorrectedTailNum\n\t,IROPStatus\n\t,SDT\n\t,SAT\n\t,EDT\n\t,EAT\n\t,EDTC\n\t,INTime\n\t,INTime_UTC\n\t,OFFTime\n\t,OFFTime_UTC\n\t,ONTime\n\t,ONTime_UTC\n\t,OUTTime\n\t,OUTTime_UTC\n\t,STA_UTC\n\t,STD_UTC\n\t,ETA_UTC\n\t,ETD_UTC\n\t,ArrDelayCode1\n\t,ArrDelayTime1\n\t,ArrDelayControllable1\n\t,ArrDelayCode2\n\t,ArrDelayTime2\n\t,ArrDelayControllable2\n\t,DepDelayTime1\n\t,DepDelayControllable1\n\t,DepDelayTime2\n\t,DepDelayControllable2\n\t,DepDelayTime3\n\t,DepDelayControllable3\n\t,ArrOverallDelayCalcTime\n\t,ArrOverallDelayCode\n\t,ArrOverallDelayControllable\n\t,DepOverallDelayCalcTime\n\t,DepOverallDelayCode\n\t,DepOverallDelayControllable\n\t,PairingId)) as A WHERE ACTION <>'INSERT')\n\n\nselect D.LegHashKey, D.ChangeTimeUTC, D.CarrierCode, substring(D.FlightNumber,1,50) as FlightNumber, convert(varchar,D.FlightDate,20) as FlightDate, D.departurestation, D.arrivalstation\n, ISNULL((case when max(isnull(newTailNum,'0')) over(partition by D.leghashkey) = '0' then E.TailNum else D.newTailNum end),'') as TailNum\n, ISNULL((case when max(isnull(newUncorrectedTailNum,'0')) over(partition by D.leghashkey) = '0' then E.UncorrectedTailNum else D.newUncorrectedTailNum end),'') as UncorrectedTailNum\n, ISNULL((case when max(isnull(newDelayCode,'0')) over(partition by D.leghashkey) = '0' then E.DelayCode else D.newDelayCode end),'') as DelayCode\n, ISNULL((case when max(isnull(newIROPStatus,'0')) over(partition by D.leghashkey) = '0' then E.IROPStatus else D.newIROPStatus end),'') as IROPStatus\n, ISNULL((case when max(isnull(newSDT,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.SDT,20) else D.newSDT end),'') as SDT\n, ISNULL((case when max(isnull(newSAT,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.SAT,20) else D.newSAT end),'') as SAT\n, ISNULL((case when max(isnull(newEDT,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.EDT,20) else D.newEDT end),'') as EDT\n, ISNULL((case when max(isnull(newEAT,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.EAT,20) else D.newEAT end),'') as EAT\n, ISNULL((case when max(isnull(newEDTC,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.EDCT,20) else D.newEDTC end),'') as EDTC\n, ISNULL((case when max(isnull(newINTime,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.INTime,20) else D.newINTime end),'') as INTime\n, ISNULL((case when max(isnull(newINTime_UTC,'0')) over(partition by D.leghashkey) = '0' then E.INTime_UTC else D.newINTime_UTC end),'') as INTime_UTC\n, ISNULL((case when max(isnull(newOFFTime,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.OFFTime,20) else D.newOFFTime end),'') as OFFTime\n, ISNULL((case when max(isnull(newOFFTime_UTC,'0')) over(partition by D.leghashkey) = '0' then E.OFFTime_UTC else D.newOFFTime_UTC end),'') as OFFTime_UTC\n, ISNULL((case when max(isnull(newONTime,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.ONTime,20) else D.newONTime end),'') as ONTime\n, ISNULL((case when max(isnull(newONTime_UTC,'0')) over(partition by D.leghashkey) = '0' then E.ONTime_UTC else D.newONTime_UTC end),'') as ONTime_UTC\n, ISNULL((case when max(isnull(newOUTTime,'0')) over(partition by D.leghashkey) = '0' then convert(varchar,E.OUTTime,20) else D.newOUTTime end),'') as OUTTime\n, ISNULL((case when max(isnull(newOUTTime_UTC,'0')) over(partition by D.leghashkey) = '0' then E.OUTTime_UTC else D.newOUTTime_UTC end),'') as OUTTime_UTC\n, ISNULL((case when max(isnull(newSTA_UTC,'0')) over(partition by D.leghashkey) = '0' then E.STA_UTC else D.newSTA_UTC end),'') as STA_UTC\n, ISNULL((case when max(isnull(newSTD_UTC,'0')) over(partition by D.leghashkey) = '0' then E.STD_UTC else D.newSTD_UTC end),'') as STD_UTC\n, ISNULL((case when max(isnull(newETA_UTC,'0')) over(partition by D.leghashkey) = '0' then E.ETA_UTC else D.newETA_UTC end),'') as ETA_UTC\n, ISNULL((case when max(isnull(newETD_UTC,'0')) over(partition by D.leghashkey) = '0' then E.ETD_UTC else D.newETD_UTC end),'') as ETD_UTC\n, ISNULL((case when max(isnull(newArrDelayCode1,'0')) over(partition by D.leghashkey) = '0' then E.ArrDelayCode1 else D.newArrDelayCode1 end),'') as ArrDelayCode1\n, ISNULL((case when max(isnull(newArrDelayTime1,'0')) over(partition by D.leghashkey) = '0' then cast(E.ArrDelayTime1 as varchar(50)) else D.newArrDelayTime1 end),'') as ArrDelayTime1\n, ISNULL((case when max(isnull(newArrDelayControllable1,'0')) over(partition by D.leghashkey) = '0' then IIF(E.ArrDelayControllable1=1,'1','0') else D.newArrDelayControllable1 end),'') as ArrDelayControllable1\n, ISNULL((case when max(isnull(newArrDelayCode2,'0')) over(partition by D.leghashkey) = '0' then E.ArrDelayCode2 else D.newArrDelayCode2 end),'') as ArrDelayCode2\n, ISNULL((case when max(isnull(newArrDelayTime2,'0')) over(partition by D.leghashkey) = '0' then cast(E.ArrDelayTime2 as varchar(50)) else D.newArrDelayTime2 end),'') as ArrDelayTime2\n, ISNULL((case when max(isnull(newArrDelayControllable2,'0')) over(partition by D.leghashkey) = '0' then IIF(E.ArrDelayControllable2=1,'1','0') else D.newArrDelayControllable2 end),'') as ArrDelayControllable2\n, ISNULL((case when max(isnull(newDepDelayCode1,'0')) over(partition by D.leghashkey) = '0' then E.DepDelayCode1 else D.newDepDelayCode1 end),'') as DepDelayCode1\n, ISNULL((case when max(isnull(newDepDelayTime1,'0')) over(partition by D.leghashkey) = '0' then cast(E.DepDelayTime1 as varchar(50)) else D.newDepDelayTime1 end),'') as DepDelayTime1\n, ISNULL((case when max(isnull(newDepDelayControllable1,'0')) over(partition by D.leghashkey) = '0' then IIF(E.DepDelayControllable1=1,'1','0') else D.newDepDelayControllable1 end),'') as DepDelayControllable1\n, ISNULL((case when max(isnull(newDepDelayCode2,'0')) over(partition by D.leghashkey) = '0' then E.DepDelayCode2 else D.newDepDelayCode2 end),'') as DepDelayCode2\n, ISNULL((case when max(isnull(newDepDelayTime2,'0')) over(partition by D.leghashkey) = '0' then cast(E.DepDelayTime2 as varchar(50)) else D.newDepDelayTime2 end),'') as DepDelayTime2\n, ISNULL((case when max(isnull(newDepDelayControllable2,'0')) over(partition by D.leghashkey) = '0' then IIF(E.DepDelayControllable2=1,'1','0') else D.newDepDelayControllable2 end),'') as DepDelayControllable2\n, ISNULL((case when max(isnull(newDepDelayCode3,'0')) over(partition by D.leghashkey) = '0' then E.DepDelayCode3 else D.newDepDelayCode3 end),'') as DepDelayCode3\n, ISNULL((case when max(isnull(newDepDelayTime3,'0')) over(partition by D.leghashkey) = '0' then cast(E.DepDelayTime3 as varchar(50)) else D.newDepDelayTime3 end),'') as DepDelayTime3\n, ISNULL((case when max(isnull(newDepDelayControllable3,'0')) over(partition by D.leghashkey) = '0' then IIF(E.DepDelayControllable3=1,'1','0') else D.newDepDelayControllable3 end),'') as DepDelayControllable3\n, ISNULL((case when max(isnull(newArrOverallDelayCalcTime,'0')) over(partition by D.leghashkey) = '0' then cast(E.ArrOverallDelayCalcTime as varchar(50)) else D.newArrOverallDelayCalcTime end),'') as ArrOverallDelayCalcTime\n, ISNULL((case when max(isnull(newArrOverallDelayCode,'0')) over(partition by D.leghashkey) = '0' then E.ArrOverallDelayCode else D.newArrOverallDelayCode end),'') as ArrOverallDelayCode\n, ISNULL((case when max(isnull(newArrOverallDelayControllable,'0')) over(partition by D.leghashkey) = '0' then IIF(E.ArrOverallDelayControllable=1,'1','0') else D.newArrOverallDelayControllable end),'') as ArrOverallDelayControllable\n, ISNULL((case when max(isnull(newDepOverallDelayCalcTime,'0')) over(partition by D.leghashkey) = '0' then cast(E.DepOverallDelayCalcTime as varchar(50)) else D.newDepOverallDelayCalcTime end),'') as DepOverallDelayCalcTime\n, ISNULL((case when max(isnull(newDepOverallDelayCode,'0')) over(partition by D.leghashkey) = '0' then E.DepOverallDelayCode else D.newDepOverallDelayCode end),'') as DepOverallDelayCode\n, ISNULL((case when max(isnull(newDepOverallDelayControllable,'0')) over(partition by D.leghashkey) = '0' then IIF(E.DepOverallDelayControllable=1,'1','0') else D.newDepOverallDelayControllable end),'') as DepOverallDelayControllable\n, ISNULL((case when max(isnull(newPairingId,'0')) over(partition by D.leghashkey) = '0' then E.PairingId else D.newPairingId end),'') as PairingId\nfrom\n(select C.LegHashKey, C.ChangeTimeUTC, C.CarrierCode, C.FlightNumber, C.FlightDate, C.departurestation, C.arrivalstation\n,FIRST_VALUE(C.TailNum) over(partition by C.LegHashKey, C.TailNum_grp order by C.ChangeTimeUTC) as newTailNum\n,FIRST_VALUE(C.UncorrectedTailNum) over(partition by C.LegHashKey,C.UncorrectedTailNum_grp order by C.ChangeTimeUTC) as newUncorrectedTailNum\n,FIRST_VALUE(C.DelayCode) over(partition by C.LegHashKey, C.DelayCode_grp order by C.ChangeTimeUTC) as newDelayCode\n,FIRST_VALUE(C.IROPStatus) over(partition by C.LegHashKey, C.IROPStatus_grp order by C.ChangeTimeUTC) as newIROPStatus\n,FIRST_VALUE(C.SDT) over(partition by C.LegHashKey, C.SDT_grp order by C.ChangeTimeUTC) as newSDT\n,FIRST_VALUE(C.SAT) over(partition by C.LegHashKey, C.SAT_grp order by C.ChangeTimeUTC) as newSAT\n,FIRST_VALUE(C.EDT) over(partition by C.LegHashKey, C.EDT_grp order by C.ChangeTimeUTC) as newEDT\n,FIRST_VALUE(C.EAT) over(partition by C.LegHashKey, C.EAT_grp order by C.ChangeTimeUTC) as newEAT\n,FIRST_VALUE(C.EDTC) over(partition by C.LegHashKey, C.EDTC_grp order by C.ChangeTimeUTC) as newEDTC\n,FIRST_VALUE(C.INTime) over(partition by C.LegHashKey, C.INTime_grp order by C.ChangeTimeUTC) as newINTime\n,FIRST_VALUE(C.INTime_UTC) over(partition by C.LegHashKey, C.INTime_UTC_grp order by C.ChangeTimeUTC) as newINTime_UTC\n,FIRST_VALUE(C.OFFTime) over(partition by C.LegHashKey, C.OFFTime_grp order by C.ChangeTimeUTC) as newOFFTime\n,FIRST_VALUE(C.OFFTime_UTC) over(partition by C.LegHashKey, C.OFFTime_UTC_grp order by C.ChangeTimeUTC) as newOFFTime_UTC\n,FIRST_VALUE(C.ONTime) over(partition by C.LegHashKey, C.ONTime_grp order by C.ChangeTimeUTC) as newONTime\n,FIRST_VALUE(C.ONTime_UTC) over(partition by C.LegHashKey, C.ONTime_UTC_grp order by C.ChangeTimeUTC) as newONTime_UTC\n,FIRST_VALUE(C.OUTTime) over(partition by C.LegHashKey, C.OUTTime_grp order by C.ChangeTimeUTC) as newOUTTime\n,FIRST_VALUE(C.OUTTime_UTC) over(partition by C.LegHashKey, C.OUTTime_UTC_grp order by C.ChangeTimeUTC) as newOUTTime_UTC\n,FIRST_VALUE(C.STA_UTC) over(partition by C.LegHashKey, C.STA_UTC_grp order by C.ChangeTimeUTC) as newSTA_UTC\n,FIRST_VALUE(C.STD_UTC) over(partition by C.LegHashKey, C.STD_UTC_grp order by C.ChangeTimeUTC) as newSTD_UTC\n,FIRST_VALUE(C.ETA_UTC) over(partition by C.LegHashKey, C.ETA_UTC_grp order by C.ChangeTimeUTC) as newETA_UTC\n,FIRST_VALUE(C.ETD_UTC) over(partition by C.LegHashKey, C.ETD_UTC_grp order by C.ChangeTimeUTC) as newETD_UTC\n,FIRST_VALUE(C.ArrDelayCode1) over(partition by C.LegHashKey, C.ArrDelayCode1_grp order by C.ChangeTimeUTC) as newArrDelayCode1\n,FIRST_VALUE(C.ArrDelayTime1) over(partition by C.LegHashKey, C.ArrDelayTime1_grp order by C.ChangeTimeUTC) as newArrDelayTime1\n,FIRST_VALUE(C.ArrDelayControllable1) over(partition by C.LegHashKey, C.ArrDelayControllable1_grp order by C.ChangeTimeUTC) as newArrDelayControllable1\n,FIRST_VALUE(C.ArrDelayCode2) over(partition by C.LegHashKey, C.ArrDelayCode2_grp order by C.ChangeTimeUTC) as newArrDelayCode2\n,FIRST_VALUE(C.ArrDelayTime2) over(partition by C.LegHashKey, C.ArrDelayTime2_grp order by C.ChangeTimeUTC) as newArrDelayTime2\n,FIRST_VALUE(C.ArrDelayControllable2) over(partition by C.LegHashKey, C.ArrDelayControllable2_grp order by C.ChangeTimeUTC) as newArrDelayControllable2\n,FIRST_VALUE(C.DepDelayCode1) over(partition by C.LegHashKey, C.DepDelayCode1_grp order by C.ChangeTimeUTC) as newDepDelayCode1\n,FIRST_VALUE(C.DepDelayTime1) over(partition by C.LegHashKey, C.DepDelayTime1_grp order by C.ChangeTimeUTC) as newDepDelayTime1\n,FIRST_VALUE(C.DepDelayControllable1) over(partition by C.LegHashKey, C.DepDelayControllable1_grp order by C.ChangeTimeUTC) as newDepDelayControllable1\n,FIRST_VALUE(C.DepDelayCode2) over(partition by C.LegHashKey, C.DepDelayCode2_grp order by C.ChangeTimeUTC) as newDepDelayCode2\n,FIRST_VALUE(C.DepDelayTime2) over(partition by C.LegHashKey, C.DepDelayTime2_grp order by C.ChangeTimeUTC) as newDepDelayTime2\n,FIRST_VALUE(C.DepDelayControllable2) over(partition by C.LegHashKey, C.DepDelayControllable2_grp order by C.ChangeTimeUTC) as newDepDelayControllable2\n,FIRST_VALUE(C.DepDelayCode3) over(partition by C.LegHashKey, C.DepDelayCode3_grp order by C.ChangeTimeUTC) as newDepDelayCode3\n,FIRST_VALUE(C.DepDelayTime3) over(partition by C.LegHashKey, C.DepDelayTime3_grp order by C.ChangeTimeUTC) as newDepDelayTime3\n,FIRST_VALUE(C.DepDelayControllable3) over(partition by C.LegHashKey, C.DepDelayControllable3_grp order by C.ChangeTimeUTC) as newDepDelayControllable3\n,FIRST_VALUE(C.ArrOverallDelayCalcTime) over(partition by C.LegHashKey, C.ArrOverallDelayCalcTime_grp order by C.ChangeTimeUTC) as newArrOverallDelayCalcTime\n,FIRST_VALUE(C.ArrOverallDelayCode) over(partition by C.LegHashKey, C.ArrOverallDelayCode_grp order by C.ChangeTimeUTC) as newArrOverallDelayCode\n,FIRST_VALUE(C.ArrOverallDelayControllable) over(partition by C.LegHashKey, C.ArrOverallDelayControllable_grp order by C.ChangeTimeUTC) as newArrOverallDelayControllable\n,FIRST_VALUE(C.DepOverallDelayCalcTime) over(partition by C.LegHashKey, C.DepOverallDelayCalcTime_grp order by C.ChangeTimeUTC) as newDepOverallDelayCalcTime\n,FIRST_VALUE(C.DepOverallDelayCode) over(partition by C.LegHashKey, C.DepOverallDelayCode_grp order by C.ChangeTimeUTC) as newDepOverallDelayCode\n,FIRST_VALUE(C.DepOverallDelayControllable) over(partition by C.LegHashKey, C.DepOverallDelayControllable_grp order by C.ChangeTimeUTC) as newDepOverallDelayControllable\n,FIRST_VALUE(C.PairingId) over(partition by C.LegHashKey, C.PairingId_grp order by C.ChangeTimeUTC) as newPairingId\nfrom\n(select flightdetail.*\n,sum(case when TailNum is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as TailNum_grp\n,sum(case when UncorrectedTailNum is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as UncorrectedTailNum_grp\n,sum(case when DelayCode is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DelayCode_grp\n,sum(case when IROPStatus is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as IROPStatus_grp\n,sum(case when SDT is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as SDT_grp\n,sum(case when SAT is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as SAT_grp\n,sum(case when EDT is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as EDT_grp\n,sum(case when EAT is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as EAT_grp\n,sum(case when EDTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as EDTC_grp\n,sum(case when INTime is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as INTime_grp\n,sum(case when INTime_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as INTime_UTC_grp\n,sum(case when OFFTime is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as OFFTime_grp\n,sum(case when OFFTime_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as OFFTime_UTC_grp\n,sum(case when ONTime is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ONTime_grp\n,sum(case when ONTime_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ONTime_UTC_grp\n,sum(case when OUTTime is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as OUTTime_grp\n,sum(case when OUTTime_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as OUTTime_UTC_grp\n,sum(case when STA_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as STA_UTC_grp\n,sum(case when STD_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as STD_UTC_grp\n,sum(case when ETA_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ETA_UTC_grp\n,sum(case when ETD_UTC is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ETD_UTC_grp\n,sum(case when ArrDelayCode1 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrDelayCode1_grp\n,sum(case when ArrDelayTime1 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrDelayTime1_grp\n,sum(case when ArrDelayControllable1 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrDelayControllable1_grp\n,sum(case when ArrDelayCode2 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrDelayCode2_grp\n,sum(case when ArrDelayTime2 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrDelayTime2_grp\n,sum(case when ArrDelayControllable2 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrDelayControllable2_grp\n,sum(case when DepDelayCode1 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayCode1_grp\n,sum(case when DepDelayTime1 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayTime1_grp\n,sum(case when DepDelayControllable1 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayControllable1_grp\n,sum(case when DepDelayCode2 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayCode2_grp\n,sum(case when DepDelayTime2 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayTime2_grp\n,sum(case when DepDelayControllable2 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayControllable2_grp\n,sum(case when DepDelayCode3 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayCode3_grp\n,sum(case when DepDelayTime3 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayTime3_grp\n,sum(case when DepDelayControllable3 is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepDelayControllable3_grp\n,sum(case when ArrOverallDelayCalcTime is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrOverallDelayCalcTime_grp\n,sum(case when ArrOverallDelayCode is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrOverallDelayCode_grp\n,sum(case when ArrOverallDelayControllable is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as ArrOverallDelayControllable_grp\n,sum(case when DepOverallDelayCalcTime is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepOverallDelayCalcTime_grp\n,sum(case when DepOverallDelayCode is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepOverallDelayCode_grp\n,sum(case when DepOverallDelayControllable is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as DepOverallDelayControllable_grp\n,sum(case when PairingId is null then 0 else 1 end) over(partition by LegHashKey order by ChangeTimeUTC) as PairingId_grp\nfrom flightdetail) as C ) as D\nleft outer join\ndbo.flightdetails E\non (D.LegHashKey=E.LegHashKey)"}}}},"visible":true},"9":{"slot":9,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"flightdetailupdate1"}}}},"visible":true},"10":{"slot":10,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"porterdatawarehouse"}}}},"visible":true},"11":{"slot":11,"name":"Connection Options","elements":{},"visible":true},"12":{"slot":12,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"2"}}}},"visible":true},"13":{"slot":13,"name":"Distribution Style","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Even"}}}},"visible":true},"14":{"slot":14,"name":"Distribution Key","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"15":{"slot":15,"name":"Sort Key","elements":{},"visible":true},"16":{"slot":16,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"etl"}}}},"visible":true},"17":{"slot":17,"name":"Sort Key Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"18":{"slot":18,"name":"Primary Key","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"96":{"slot":96,"name":"Location","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"s3://<bucket>/<path>"}}}},"visible":false},"97":{"slot":97,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"98":{"slot":98,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"99":{"slot":99,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"101":{"slot":101,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"102":{"slot":102,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"103":{"slot":103,"name":"Data Selection","elements":{},"visible":false},"104":{"slot":104,"name":"Data Source Filter","elements":{},"visible":false},"105":{"slot":105,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":false},"106":{"slot":106,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1034":{"slot":1034,"name":"Load Options","elements":{},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63084":{"id":63084,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-741198691,"x":-1568,"y":-48,"width":32,"height":32,"inputConnectorIDs":[63107],"outputSuccessConnectorIDs":[63109],"outputFailureConnectorIDs":[63118],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"},"2":{"slot":2,"fromId":null,"fromName":"Message","mapTo":"Errormessage"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Initial Record Population"}}}},"visible":true},"2":{"slot":2,"name":"Database Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Microsoft SQL Server"}}}},"visible":true},"3":{"slot":3,"name":"Connection URL","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${db_server_url_operations}"}}}},"visible":true},"6":{"slot":6,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${db_user_operations}"}}}},"visible":true},"7":{"slot":7,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":"${db_pswd_operations}"}}}},"visible":true},"8":{"slot":8,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT  \nfcr.leghashkey, changetimeutc,fcr.carriercode,fcr.flightnumber,fcr.flightdate,fcr.departurestation,fcr.arrivalstation\n,fcr.tailnum,fcr.uncorrectedtailnum,fcr.delaycode,fcr.iropstatus\n,fcr.sdt,fcr.sat,fcr.edt,fcr.eat,fcr.edtc,fcr.intime,fcr.intime_utc,fcr.offtime,fcr.offtime_utc,fcr.ontime,fcr.ontime_utc,fcr.outtime,fcr.outtime_utc\n,fcr.sta_utc,fcr.std_utc\n,fcr.eta_utc,fcr.etd_utc,fcr.arrdelaycode1,fcr.arrdelaytime1,fcr.arrdelaycontrollable1,fcr.arrdelaycode2,fcr.arrdelaytime2,fcr.arrdelaycontrollable2,fcr.depdelaycode1,fcr.depdelaytime1,fcr.depdelaycontrollable1,fcr.depdelaycode2,fcr.depdelaytime2,fcr.depdelaycontrollable2,fcr.depdelaycode3,fcr.depdelaytime3,fcr.depdelaycontrollable3,fcr.arroveralldelaycalctime\n,fcr.arroveralldelaycode,fcr.arroveralldelaycontrollable,fcr.depoveralldelaycalctime,fcr.depoveralldelaycode,fcr.depoveralldelaycontrollable,fcr.pairingid\nFROM (\nselect B.action,B.LegHashKey,N.ChangeTimeUTC\n,isnull(B.CarrierCode, case when substring(B.LegHashKey,12,3)='POE' then 'PD' else substring(B.LegHashKey,12,3) end) as CarrierCode\n,isnull(B.flightnumber, replace(substring(B.LegHashKey,15,4),' ','')) as FlightNumber\n,isnull(B.flightdate, substring(B.Leghashkey,1,10)) as FlightDate\n,isnull(B.departurestation,substring(B.Leghashkey,20,3)) as departurestation\n,isnull(B.arrivalstation, substring(B.Leghashkey,24,3)) as arrivalstation\n,isnull(B.TailNum, isnull(P.TailNum,'')) as Tailnum\n,isnull(B.UncorrectedTailNum, isnull(P.UncorrectedTailNum,'')) as UncorrectedTailNum\n,isnull(B.DelayCode, isnull(P.DelayCode,'')) as DelayCode\n,isnull(B.IROPStatus, isnull(P.IROPStatus,'')) as IROPStatus\n,isnull(B.SDT,isnull(convert(varchar, P.SDT, 20),'')) as SDT\n,isnull(B.SAT,isnull(convert(varchar, P.SAT, 20),'')) as SAT\n,isnull(B.EDT,isnull(convert(varchar, P.EDT, 20),'')) as EDT\n,isnull(B.EAT,isnull(convert(varchar, P.EAT, 20),'')) as EAT\n,isnull(B.EDTC,isnull(convert(varchar, P.EDCT, 20),'')) as EDTC\n,isnull(B.INTime,isnull(convert(varchar, P.INTime, 20),'')) as INTime\n,isnull(B.INTime_UTC,isnull(convert(varchar, P.INTime_UTC, 20),'')) as INTime_UTC\n,isnull(B.OFFTime,isnull(convert(varchar, P.OFFTime, 20),'')) as OFFTime\n,isnull(B.OFFTime_UTC,isnull(convert(varchar, P.OFFTime_UTC, 20),'')) as OFFTime_UTC\n,isnull(B.ONTime,isnull(convert(varchar, P.ONTime, 20),'')) as ONTime\n,isnull(B.ONTime_UTC,isnull(convert(varchar, P.ONTime_UTC, 20),'')) as ONTime_UTC\n,isnull(B.OUTTime,isnull(convert(varchar, P.OUTTime, 20),'')) as OUTTime\n,isnull(B.OUTTime_UTC,isnull(convert(varchar, P.OUTTime_UTC, 20),'')) as OUTTime_UTC\n,isnull(B.ETA_UTC,isnull(convert(varchar, P.ETA_UTC, 20),'')) as ETA_UTC\n,isnull(B.ETD_UTC,isnull(convert(varchar, P.ETD_UTC, 20),'')) as ETD_UTC\n,isnull(B.STA_UTC,isnull(convert(varchar, P.STA_UTC, 20),'')) as STA_UTC\n,isnull(B.STD_UTC,isnull(convert(varchar, P.STD_UTC, 20),'')) as STD_UTC\n,isnull(B.ArrDelayCode1,isnull(P.ArrDelayCode1,'')) as ArrDelayCode1\n,isnull(B.ArrDelayTime1,isnull(P.ArrDelayTime1,'')) as ArrDelayTime1\n,isnull(B.ArrDelayControllable1,isnull(P.ArrDelayControllable1,'')) as ArrDelayControllable1\n,isnull(B.ArrDelayCode2,isnull(P.ArrDelayCode2,'')) as ArrDelayCode2\n,isnull(B.ArrDelayTime2,isnull(P.ArrDelayTime2,'')) as ArrDelayTime2\n,isnull(B.ArrDelayControllable2,isnull(P.ArrDelayControllable2,'')) as ArrDelayControllable2\n,isnull(B.DepDelayCode1,isnull(P.DepDelayCode1,'')) as DepDelayCode1\n,isnull(B.DepDelayTime1,isnull(P.DepDelayTime1,'')) as DepDelayTime1\n,isnull(B.DepDelayControllable1,isnull(P.DepDelayControllable1,'')) as DepDelayControllable1\n,isnull(B.DepDelayCode2,isnull(P.DepDelayCode2,'')) as DepDelayCode2\n,isnull(B.DepDelayTime2,isnull(P.DepDelayTime2,'')) as DepDelayTime2\n,isnull(B.DepDelayControllable2,isnull(P.DepDelayControllable2,'')) as DepDelayControllable2\n,isnull(B.DepDelayCode3,isnull(P.DepDelayCode3,'')) as DepDelayCode3\n,isnull(B.DepDelayTime3,isnull(P.DepDelayTime3,'')) as DepDelayTime3\n,isnull(B.DepDelayControllable3,isnull(P.DepDelayControllable3,'')) as DepDelayControllable3\n,isnull(B.ArrOverallDelayCalcTime,isnull(P.ArrOverallDelayCalcTime,'')) as ArrOverallDelayCalcTime\n,isnull(B.ArrOverallDelayCode,isnull(P.ArrOverallDelayCode,'')) as ArrOverallDelayCode\n,isnull(B.ArrOverallDelayControllable,isnull(P.ArrOverallDelayControllable,'')) as ArrOverallDelayControllable\n,isnull(B.DepOverallDelayCalcTime,isnull(P.DepOverallDelayCalcTime,'')) as DepOverallDelayCalcTime\n,isnull(B.DepOverallDelayCode,isnull(P.DepOverallDelayCode,'')) as DepOverallDelayCode\n,isnull(B.DepOverallDelayControllable,isnull(P.DepOverallDelayControllable,'')) as DepOverallDelayControllable\n,isnull(B.PairingId,isnull(P.PairingId,'')) as PairingId\nfrom\n(select * from \n\t(SELECT\t/*include these columns to identify a unique record */\n\t\t\t'update' Action\n\t\t\t,A.LegHashKey\n\t\t\t,A.ColumnName\n\t\t\t,CASE WHEN P.CarrierCode='POE' THEN 'PD' else P.CarrierCode end as CarrierCode\n\t\t\t--,substring(P.FltNum,charindex(' ',P.FltNum)+1,LEN(P.FltNum))  flightnumber\n            ,REPLACE(RIGHT(P.FltNum,4),' ','') AS flightnumber\n\t\t\t,P.FltDate flightdate\n\t\t\t,P.DepAirport departurestation\n\t\t\t,P.ArrAirport arrivalstation\n            ,A.Old\n\tfrom \n\t(select * from\n\t(select ChangetimeUTC, \n\tLegHashKey, Action, ColumnName, isnull(Old,'') Old, rank() over (partition by LegHashKey, ColumnName order by ChangeTimeUTC asc) RANK_\n\tfrom dbo.FlightDetailsChanges\n\twhere \n    /* get the flight instance and all related leghaskkey records */ \n\tEXISTS (SELECT 1 FROM dbo.FlightDetailsChanges AS fdc2\n\t\t\tWHERE LEFT(FlightDetailsChanges.leghashkey,26) = LEFT(fdc2.leghashkey,26)\n\t\t\tAND  fdc2.ChangeTimeUTC >='${last_changetimeutc}' AND ChangeTimeUTC < '${max_changetimeutc}')  \n     and (ColumnName IN ('DelayCode','DepDelayCode1','DepDelayCode2','DepDelayCode3','TailNum','UncorrectedTailNum','IROPStatus', 'SDT','SAT', 'EDT', 'EAT',\n\t'EDTC','INTime','INTime_UTC','OFFTime','OFFTime_UTC','ONTime','ONTime_UTC','OUTTime','OUTTime_UTC','STA_UTC','STD_UTC','ETA_UTC','ETD_UTC','ArrDelayCode1',\n\t'ArrDelayTime1','ArrDelayControllable1','ArrDelayCode2','ArrDelayTime2','ArrDelayControllable2','DepDelayCode1','DepDelayTime1','DepDelayControllable1',\n\t'DepDelayCode2','DepDelayTime2','DepDelayControllable2','DepDelayCode3','DepDelayTime3','DepDelayControllable3','ArrOverallDelayCalcTime','ArrOverallDelayCode',\n\t'ArrOverallDelayControllable','DepOverallDelayCalcTime','DepOverallDelayCode','DepOverallDelayControllable','PairingId') or ACTION in ('INSERT','UPDATE'))) A\n\twhere RANK_=1) A\nleft outer join dbo.FlightDetails P on (a.LegHashKey=p.LegHashKey))\n AS SourceTable PIVOT(max(old) FOR ColumnName IN \n\t--specify the columns to create\n\t(DelayCode\n\t,DepDelayCode1\n\t,DepDelayCode2\n\t,DepDelayCode3\n\t,TailNum\n\t,UncorrectedTailNum\n\t,IROPStatus\n\t,SDT\n\t,SAT\n\t,EDT\n\t,EAT\n\t,EDTC\n\t,INTime\n\t,INTime_UTC\n\t,OFFTime\n\t,OFFTime_UTC\n\t,ONTime\n\t,ONTime_UTC\n\t,OUTTime\n\t,OUTTime_UTC\n\t,STA_UTC\n\t,STD_UTC\n\t,ETA_UTC\n\t,ETD_UTC\n\t,ArrDelayCode1\n\t,ArrDelayTime1\n\t,ArrDelayControllable1\n\t,ArrDelayCode2\n\t,ArrDelayTime2\n\t,ArrDelayControllable2\n\t,DepDelayTime1\n\t,DepDelayControllable1\n\t,DepDelayTime2\n\t,DepDelayControllable2\n\t,DepDelayTime3\n\t,DepDelayControllable3\n\t,ArrOverallDelayCalcTime\n\t,ArrOverallDelayCode\n\t,ArrOverallDelayControllable\n\t,DepOverallDelayCalcTime\n\t,DepOverallDelayCode\n\t,DepOverallDelayControllable\n\t,PairingId) ) AS flightdetailupdate) as B\n\tleft outer join dbo.flightdetails as P on (B.LegHashKey=P.LegHashKey)\n\tinner join dbo.FlightDetailsChanges N\n\ton (B.LegHashKey=N.LegHashKey and N.Action='INSERT')\n  )  AS fcr\n"}}}},"visible":true},"9":{"slot":9,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"flightdetailupdate1"}}}},"visible":true},"10":{"slot":10,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"porterdatawarehouse"}}}},"visible":true},"11":{"slot":11,"name":"Connection Options","elements":{},"visible":true},"12":{"slot":12,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"4"}}}},"visible":true},"13":{"slot":13,"name":"Distribution Style","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Even"}}}},"visible":true},"14":{"slot":14,"name":"Distribution Key","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"15":{"slot":15,"name":"Sort Key","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"ChangeTimeUTC"}}}},"visible":true},"16":{"slot":16,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"etl"}}}},"visible":true},"17":{"slot":17,"name":"Sort Key Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Compound"}}}},"visible":true},"18":{"slot":18,"name":"Primary Key","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"96":{"slot":96,"name":"Location","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"s3://<bucket>/<path>"}}}},"visible":false},"97":{"slot":97,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"98":{"slot":98,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"99":{"slot":99,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"101":{"slot":101,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true},"102":{"slot":102,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"103":{"slot":103,"name":"Data Selection","elements":{},"visible":false},"104":{"slot":104,"name":"Data Source Filter","elements":{},"visible":false},"105":{"slot":105,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":false},"106":{"slot":106,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1034":{"slot":1034,"name":"Load Options","elements":{},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63085":{"id":63085,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-96,"y":-64,"width":32,"height":32,"inputConnectorIDs":[63108],"outputSuccessConnectorIDs":[63102],"outputFailureConnectorIDs":[63116],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryExpiredDateUpdate_Load_Change"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryExpiredDateUpdate_Load"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63086":{"id":63086,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-1296,"y":-80,"width":32,"height":32,"inputConnectorIDs":[63104],"outputSuccessConnectorIDs":[63105],"outputFailureConnectorIDs":[63122],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistory_Load_Initial"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistory_Load"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63087":{"id":63087,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-928,"y":-64,"width":32,"height":32,"inputConnectorIDs":[63103],"outputSuccessConnectorIDs":[63099],"outputFailureConnectorIDs":[63117],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryExpiredDateUpdate_Load_Initial"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryExpiredDateUpdate_Load"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63088":{"id":63088,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-448,"y":208,"width":32,"height":32,"inputConnectorIDs":[63106],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63089":{"id":63089,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-1024,"y":208,"width":32,"height":32,"inputConnectorIDs":[63120,63121,63122,63123,63124,63125,63114,63115,63116,63117,63118,63119],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63112],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63090":{"id":63090,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":448,"y":-16,"width":32,"height":32,"inputConnectorIDs":[63111],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63091":{"id":63091,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":-688,"y":208,"width":32,"height":32,"inputConnectorIDs":[63112],"outputSuccessConnectorIDs":[63106],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"job failed"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${job_name} - Job Failed"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Environment: ${environment_name}\n\nJob failed: ${job_name}\nComponent: ${ErrorComponent}\n\nError Message: ${Errormessage}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63092":{"id":63092,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":336,"y":-16,"width":32,"height":32,"inputConnectorIDs":[63101],"outputSuccessConnectorIDs":[63111],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SNS Message 2"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${job_name} Completed"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Environment: ${environment_name}\n\nJob: ${job_name}\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63093":{"id":63093,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-1104,"y":-112,"width":32,"height":32,"inputConnectorIDs":[63105],"outputSuccessConnectorIDs":[63103],"outputFailureConnectorIDs":[63125],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryActiveFlagUpdate_Load_Initial_new"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryActiveFlagUpdate_Load"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63094":{"id":63094,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1896325668,"x":-272,"y":-96,"width":32,"height":32,"inputConnectorIDs":[63098],"outputSuccessConnectorIDs":[63108],"outputFailureConnectorIDs":[63115],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryActiveFlagUpdate_Load_Change part2"}}}},"visible":true},"2":{"slot":2,"name":"Transformation Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - FlightDetailsHistoryActiveFlagUpdate_Load"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63095":{"id":63095,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-1440,"y":-48,"width":32,"height":32,"inputConnectorIDs":[63109],"outputSuccessConnectorIDs":[63104],"outputFailureConnectorIDs":[63114],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - Stage Flight Detail Update"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - Stage Flight Detail Update"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63096":{"id":63096,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-576,"y":-80,"width":32,"height":32,"inputConnectorIDs":[63100],"outputSuccessConnectorIDs":[63110],"outputFailureConnectorIDs":[63119],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - Stage Flight Detail Update 0"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - Stage Flight Detail Update"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63097":{"id":63097,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":176,"y":-16,"width":32,"height":32,"inputConnectorIDs":[63102],"outputSuccessConnectorIDs":[63101],"outputFailureConnectorIDs":[63124],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - Flight Detail History Cancel Flight Updates"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"OPS - Flight Detail History Cancel Flight Updates"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"63104":{"id":63104,"sourceID":63095,"targetID":63086},"63105":{"id":63105,"sourceID":63086,"targetID":63093},"63106":{"id":63106,"sourceID":63091,"targetID":63088},"63107":{"id":63107,"sourceID":63081,"targetID":63084},"63108":{"id":63108,"sourceID":63094,"targetID":63085},"63109":{"id":63109,"sourceID":63084,"targetID":63095},"63110":{"id":63110,"sourceID":63096,"targetID":63082},"63111":{"id":63111,"sourceID":63092,"targetID":63090},"63098":{"id":63098,"sourceID":63082,"targetID":63094},"63099":{"id":63099,"sourceID":63087,"targetID":63083},"63100":{"id":63100,"sourceID":63083,"targetID":63096},"63101":{"id":63101,"sourceID":63097,"targetID":63092},"63102":{"id":63102,"sourceID":63085,"targetID":63097},"63103":{"id":63103,"sourceID":63093,"targetID":63087}},"failureConnectors":{"63114":{"id":63114,"sourceID":63095,"targetID":63089},"63115":{"id":63115,"sourceID":63094,"targetID":63089},"63116":{"id":63116,"sourceID":63085,"targetID":63089},"63117":{"id":63117,"sourceID":63087,"targetID":63089},"63118":{"id":63118,"sourceID":63084,"targetID":63089},"63119":{"id":63119,"sourceID":63096,"targetID":63089},"63120":{"id":63120,"sourceID":63082,"targetID":63089},"63121":{"id":63121,"sourceID":63083,"targetID":63089},"63122":{"id":63122,"sourceID":63086,"targetID":63089},"63123":{"id":63123,"sourceID":63081,"targetID":63089},"63124":{"id":63124,"sourceID":63097,"targetID":63089},"63125":{"id":63125,"sourceID":63093,"targetID":63089}},"unconditionalConnectors":{"63112":{"id":63112,"sourceID":63089,"targetID":63091},"63113":{"id":63113,"sourceID":63080,"targetID":63081}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"canUndo":true,"undoCommand":"Set Parameter","undoCreated":1579120038990,"canRedo":false,"redoCommand":"","redoCreated":-1,"notes":{"63077":{"id":63077,"x":-1901,"y":-294,"width":568,"height":139,"text":"Load the flight detail history\n\nThe following records has been excluded (on 23-Oct-2019 as advised by Troy) from extraction due to data consistency \ndelete FROM  public.flightdetailhistory  WHERE leghashkey='2019-04-14_POE1389_YTZ_YTZ_1205'\n\ndefault the scheduled and estimates times when they are missing\n\nupdated:2019-12-04","colour":"e6e63c"},"63078":{"id":63078,"x":-1631,"y":-138,"width":813,"height":195,"text":"**Load initial flight record**","colour":"e6e63c"},"63079":{"id":63079,"x":-786,"y":-145,"width":830,"height":198,"text":"**Load additional flight record changes**","colour":"e6e63c"}},"variables":{"last_changetimeutc":{"definition":{"name":"last_changetimeutc","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"2019-11-27 15:01:11"},"max_changetimeutc":{"definition":{"name":"max_changetimeutc","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"9999-12-31"}},"grids":{}},"info":{"name":"OPS - Flight Detail History","description":"Inserts and updates records into the flightdetailhistory table","type":"ORCHESTRATION"}}