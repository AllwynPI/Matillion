{"job":{"components":{"63593":{"id":63593,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-544,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63644],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63594":{"id":63594,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-336,"y":96,"width":32,"height":32,"inputConnectorIDs":[63644],"outputSuccessConnectorIDs":[63627],"outputFailureConnectorIDs":[63654],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Unique Record"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n\n# Unique Record\ncursor = context.cursor()\nsql1 = '''select count(*) from (\nSELECT eventname, flightnumber, flightdate, eventdatetimeutc ,departurestation, arrivalstation, COUNT(*) FROM public.flighteventhistory\nGROUP BY eventname, flightnumber, flightdate, eventdatetimeutc ,departurestation, arrivalstation\nHAVING COUNT(*) > 1) '''\n\ncursor.execute(sql1)\n\nunique_rec = cursor.fetchone()[0]\n\nif unique_rec > 0 :\n  message0 = \"There are \" + str(unique_rec) + \" duplicate record(s) in public.flighteventhistory table\"\n  #message0 = message0 + str(unique_rec) + \"\\n\"\n  message0 = message0 + \"\\nA duplicate record is based on the eventname, flightnumber, flightdate, eventdatetimeutc ,departurestation, and arrivalstation columns.\"\n  message0 = message0 + \"\\nPlease check the records in public.flighteventhistory table.\"\n  \n  context.updateVariable(\"Errormessage\",message0)\n  print (message0)\n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63595":{"id":63595,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":-336,"y":-48,"width":32,"height":32,"inputConnectorIDs":[63654],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63642],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW message 0"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63596":{"id":63596,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":-256,"y":16,"width":32,"height":32,"inputConnectorIDs":[63627,63642],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63640],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63597":{"id":63597,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":-16,"y":-48,"width":32,"height":32,"inputConnectorIDs":[63655],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63637],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW message 1"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63598":{"id":63598,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":-16,"y":96,"width":32,"height":32,"inputConnectorIDs":[63640],"outputSuccessConnectorIDs":[63629],"outputFailureConnectorIDs":[63655],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Unique Flight Cancel Event"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n\n# Unique 'CANCEL FLIGHT' Events Record\ncursor = context.cursor()\nsql1 = ''' select count(*) from (\nSELECT eventname, flightnumber, flightdate, departurestation,arrivalstation, COUNT(*) FROM public.flighteventhistory\nWHERE eventname IN ('CANCEL FLIGHT')\nGROUP BY eventname, flightnumber, flightdate, departurestation,arrivalstation\nHAVING COUNT(*) > 1 ) '''\n\ncursor.execute(sql1)\n\ndup_cancel_flight_eve = cursor.fetchone()[0]\n\nif dup_cancel_flight_eve>0 :\n  message1 = \"Number of duplicate 'CANCEL FLIGHT' events are :\"\n  message1 = message1 + str(dup_cancel_flight_eve) + \"\\n\"\n  message1 = message1 + \"Please validate these records in public.flighteventhistory\"\n  \n  context.updateVariable(\"Errormessage\",message1)\n  print (message1)\n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63599":{"id":63599,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":80,"y":16,"width":32,"height":32,"inputConnectorIDs":[63629,63637],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63638],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 1"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63600":{"id":63600,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":288,"y":-48,"width":32,"height":32,"inputConnectorIDs":[63653],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63639],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW message 2"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63601":{"id":63601,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":288,"y":96,"width":32,"height":32,"inputConnectorIDs":[63638],"outputSuccessConnectorIDs":[63628],"outputFailureConnectorIDs":[63653],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Unique Flight Arrival Event"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n\n# Unique 'ARRIVAL' Events Record\ncursor = context.cursor()\nsql1 = '''select count(*) from (\nSELECT eventname, flightnumber, flightdate, departurestation,arrivalstation, COUNT(*) FROM public.flighteventhistory\nWHERE eventname IN ('ARRIVAL')\nGROUP BY eventname, flightnumber, flightdate, departurestation,arrivalstation\nHAVING COUNT(*) > 1) '''\n\ncursor.execute(sql1)\n\ndup_arrival_event = cursor.fetchone()[0]\n\nif dup_arrival_event>0 :\n  message2 = \"Number of duplicate 'ARRIVAL' events in public.flighteventhistory are :\"\n  message2 = message2 + str(dup_arrival_event) + \"\\n\"\n  message2 = message2 + \"Please validate these records in public.flighteventhistory\"\n  \n  context.updateVariable(\"Errormessage\",message2)\n  print (message2)\n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63602":{"id":63602,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":368,"y":16,"width":32,"height":32,"inputConnectorIDs":[63628,63639],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63646],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 2"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63603":{"id":63603,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":1808,"y":0,"width":32,"height":32,"inputConnectorIDs":[63635],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63604":{"id":63604,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":576,"y":-64,"width":32,"height":32,"inputConnectorIDs":[63652],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63633],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW message 3"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63605":{"id":63605,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":576,"y":96,"width":32,"height":32,"inputConnectorIDs":[63646],"outputSuccessConnectorIDs":[63630],"outputFailureConnectorIDs":[63652],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"missing cancel events"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n\n# Unique 'ARRIVAL' Events Record\ncursor = context.cursor()\nsql1 = '''select count(*)from (\n \tSELECT DISTINCT carriercode ,flightnumber,flightdate,departurestation,arrivalstation FROM public.flightdetailhistory AS fdh\n     WHERE LEFT(fdh.iropcode,1) = 'X'\n     AND departurestation <> arrivalstation\n     AND NOT EXISTS (SELECT 1 FROM public.flighteventhistory AS feh\n     WHERE feh.carriercode = fdh.carriercode\n     AND feh.flightnumber = fdh.flightnumber\n     AND feh.flightdate = fdh.flightdate\n     AND feh.departurestation = fdh.departurestation\n     AND feh.arrivalstation = fdh.arrivalstation\n     AND feh.eventname = 'CANCEL FLIGHT'))'''\n\ncursor.execute(sql1)\n\nmissing_cancel_event = cursor.fetchone()[0]\n#missing_cancel_event = 10\n\nif missing_cancel_event>0 :\n  message3 = \"Number of missing 'CANCEL FLIGHT' events in public.flighteventhistory are :\"\n  message3 = message3 + str(missing_cancel_event) + \"\\n\"\n  message3 = message3 + \"Please validate cancel flight events in public.flightdetailhistory and public.flighteventhistory\"\n  \n  context.updateVariable(\"Errormessage\",message3)\n  print (message3)\n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63606":{"id":63606,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":656,"y":16,"width":32,"height":32,"inputConnectorIDs":[63630,63633],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63631],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 3"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63607":{"id":63607,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":1040,"y":80,"width":32,"height":32,"inputConnectorIDs":[63648],"outputSuccessConnectorIDs":[63622],"outputFailureConnectorIDs":[63656],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"missing arrival events"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n\n# Unique 'ARRIVAL' Events Record\ncursor = context.cursor()\nsql1 = '''select count(*) from (\n          SELECT DISTINCT carriercode,flightnumber,flightdate,departurestation,arrivalstation\n\t\t  FROM public.flightdetailhistory AS fdh\n\t\t  WHERE fdh.intime > '1900-01-01'\n\t\t  AND departurestation <> arrivalstation\n          AND NOT EXISTS (SELECT 1 FROM public.flightdetailhistory AS cx\n\t\t\t\tWHERE cx.leghashkey = fdh.leghashkey\n\t\t\t\tAND cx.iropcode like 'X%')\n\t\t  AND NOT EXISTS (SELECT 1 FROM public.flighteventhistory AS feh\n\t\t  WHERE feh.carriercode = fdh.carriercode\n\t\t  AND feh.flightnumber = fdh.flightnumber\n\t\t  AND feh.flightdate = fdh.flightdate\n\t\t  AND feh.departurestation = fdh.departurestation\n\t\t  AND feh.arrivalstation = fdh.arrivalstation\n\t\t  AND feh.eventname ='ARRIVAL')) '''\n\ncursor.execute(sql1)\n\nmissing_arrival_event = cursor.fetchone()[0]\n\nif missing_arrival_event>0 :\n  message4 = \"Number of missing 'ARRIVAL' events in public.flighteventhistory are : \"\n  message4 = message4 + str(missing_arrival_event) + \"\\n\"\n  message4 = message4 + \"Please validate these records in public.flighteventhistory and public.flightdetailhistory \"\n  \n  context.updateVariable(\"Errormessage\",message4)\n  print (message4)\n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63608":{"id":63608,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":1040,"y":-80,"width":32,"height":32,"inputConnectorIDs":[63656],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63634],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW message 4"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63609":{"id":63609,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":1152,"y":0,"width":32,"height":32,"inputConnectorIDs":[63622,63634],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63632],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 4"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63610":{"id":63610,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":1408,"y":96,"width":32,"height":32,"inputConnectorIDs":[63641],"outputSuccessConnectorIDs":[63623],"outputFailureConnectorIDs":[63657],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"duplicate eta events"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n###\n\n\n# duplicate 'ETA' Events with ETA/ETD Records\ncursor = context.cursor()\nsql1 = '''SELECT COUNT(*) FROM  public.flighteventhistory AS feh\nWHERE eventname = 'ETA'\nAND EXISTS (SELECT 1 FROM public.flighteventhistory AS dup\nWHERE dup.eventdatetimeutc = feh.eventdatetimeutc\nAND dup.carriercode = feh.carriercode\nAND dup.flightnumber = feh.flightnumber\nAND dup.flightdate = feh.flightdate\nAND dup.departurestation = feh.departurestation\nAND dup.arrivalstation = feh.arrivalstation\nAND dup.eventname = 'ETD/ETA') '''\n\ncursor.execute(sql1)\n\nrecordcount = cursor.fetchone()[0]\n\nif recordcount > 0 :\n  message4 = \"There are \"\n  message4 = message4 + str(recordcount) + \" duplicate ETA event(s) records with the same date and time of the ETD/ETA event for the flight. \"\n  message4 = message4 + \"Please validate the ETA events in public.flighteventhistory.\"\n  \n  context.updateVariable(\"Errormessage\",message4)\n  print (message4)\n  \n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63611":{"id":63611,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":1408,"y":-96,"width":32,"height":32,"inputConnectorIDs":[63657],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63645],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW message 5"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63612":{"id":63612,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":1504,"y":0,"width":32,"height":32,"inputConnectorIDs":[63623,63645],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63649],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Or 4"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63613":{"id":63613,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":1600,"y":112,"width":32,"height":32,"inputConnectorIDs":[63649],"outputSuccessConnectorIDs":[63626],"outputFailureConnectorIDs":[63658],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"duplicate etd events"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n###\n\n\n# duplicate 'ETD' Events with ETA/ETD Records\ncursor = context.cursor()\nsql1 = '''SELECT COUNT(*) FROM  public.flighteventhistory AS feh\nWHERE eventname = 'ETD'\nAND EXISTS (SELECT 1 FROM public.flighteventhistory AS dup\nWHERE dup.eventdatetimeutc = feh.eventdatetimeutc\nAND dup.carriercode = feh.carriercode\nAND dup.flightnumber = feh.flightnumber\nAND dup.flightdate = feh.flightdate\nAND dup.departurestation = feh.departurestation\nAND dup.arrivalstation = feh.arrivalstation\nAND dup.eventname = 'ETD/ETA') '''\n\ncursor.execute(sql1)\n\nrecordcount = cursor.fetchone()[0]\n\nif recordcount > 0 :\n  message4 = \"There are \"\n  message4 = message4 + str(recordcount) + \" duplicate ETD event(s) records with the same date and time of the ETD/ETA event for the flight. \"\n  message4 = message4 + \"Please validate the ETD events in public.flighteventhistory.\"\n  \n  context.updateVariable(\"Errormessage\",message4)\n  print (message4)\n  \n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63614":{"id":63614,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":1712,"y":0,"width":32,"height":32,"inputConnectorIDs":[63626,63643],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63635],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Or 4 (1)"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63615":{"id":63615,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":1600,"y":-96,"width":32,"height":32,"inputConnectorIDs":[63658],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63643],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW message 6"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63616":{"id":63616,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":928,"y":0,"width":32,"height":32,"inputConnectorIDs":[63625,63636],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63648],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Or 3"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63617":{"id":63617,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":816,"y":96,"width":32,"height":32,"inputConnectorIDs":[63631],"outputSuccessConnectorIDs":[63625],"outputFailureConnectorIDs":[63651],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"missing cancel event details"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# identify missing flight details for cancel events\n###\n\n\n# Unique 'cancel' Events Record\ncursor = context.cursor()\nsql1 = '''SELECT COUNT(*) \nFROM public.flighteventhistory  AS feh\nINNER JOIN public.flightdetailhistory AS fdh\nON feh.carriercode = fdh.carriercode AND feh.flightnumber = fdh.flightnumber\nAND feh.flightdate = fdh.flightdate AND feh.departurestation = fdh.departurestation\nAND feh.arrivalstation = fdh.arrivalstation\nAND fdh.expireddatetimeutc = '9999-12-31 00:00:00' AND fdh.activeflag = 1 AND feh.flightdate >='2019-06-01'\nWHERE feh.carriercode = 'PD' AND feh.eventname = 'CANCEL FLIGHT' AND POSITION('X' IN iropcode) = 0'''\n\ncursor.execute(sql1)\n\nmissing_cancel_event = cursor.fetchone()[0]\n#missing_cancel_event = 10\n\nif missing_cancel_event>0 :\n  message3 = \"There are \" + str(missing_cancel_event) +\" missing cancel event iropcodes in the flightdetailhistory since 2019-06-01. \\n\"\n  message3 = message3 + \"Please check the 9999-12-31 cancel flight event records in public.flightdetailhistory table\"\n  \n  context.updateVariable(\"Errormessage\",message3)\n  print (message3)\n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63618":{"id":63618,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":816,"y":-80,"width":32,"height":32,"inputConnectorIDs":[63651],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63636],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"message 3b"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63619":{"id":63619,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":1328,"y":-16,"width":32,"height":32,"inputConnectorIDs":[63624,63647],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63641],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Or 4 (2)"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63620":{"id":63620,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186960,"x":1232,"y":80,"width":32,"height":32,"inputConnectorIDs":[63632],"outputSuccessConnectorIDs":[63624],"outputFailureConnectorIDs":[63650],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Component","mapTo":"ErrorComponent"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"missing arrival event details"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# missing flight arrival intimes\n###\n\n\n# Unique 'ARRIVAL' Events Record\ncursor = context.cursor()\nsql1 = '''SELECT COUNT(*)\nFROM public.flighteventhistory  AS feh\nINNER JOIN public.flightdetailhistory AS fdh\nON feh.carriercode = fdh.carriercode\nAND feh.flightnumber = fdh.flightnumber\nAND feh.flightdate = fdh.flightdate\nAND feh.departurestation = fdh.departurestation\nAND feh.arrivalstation = fdh.arrivalstation\nAND fdh.expireddatetimeutc = '9999-12-31 00:00:00' AND fdh.activeflag = 1\nWHERE feh.carriercode = 'PD' AND feh.eventname = 'ARRIVAL'\nAND fdh.intime = '1900-01-01' AND feh.flightdate >='2019-06-01' '''\n\ncursor.execute(sql1)\n\nmissing_arrival_event = cursor.fetchone()[0]\n\nif missing_arrival_event>0 :\n  message3 = \"There are \" + str(missing_arrival_event) +\" missing arrival event intimes in the flightdetailhistory since 2019-06-01. \\n\"\n  message3 = message3 + \"Please check the 1900-01-01 arrival flight event records in public.flightdetailhistory table\"\n  \n  context.updateVariable(\"Errormessage\",message3)\n  print (message3)\n  raise Exception      \n\n\n \n  \n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"63621":{"id":63621,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":438858066,"x":1232,"y":-80,"width":32,"height":32,"inputConnectorIDs":[63650],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[63647],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"message 4b"}}}},"visible":true},"2":{"slot":2,"name":"AWS Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"us-east-1"}}}},"visible":true},"3":{"slot":3,"name":"Topic Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DW_ETL"}}}},"visible":true},"4":{"slot":4,"name":"Subject","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning - ${job_name}"}}}},"visible":true},"5":{"slot":5,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Warning:\n${Errormessage}\n-------------------------------------------\nJob: ${job_name}\nComponent: ${ErrorComponent}\nEnvironment: ${environment_name}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"63622":{"id":63622,"sourceID":63607,"targetID":63609},"63623":{"id":63623,"sourceID":63610,"targetID":63612},"63624":{"id":63624,"sourceID":63620,"targetID":63619},"63625":{"id":63625,"sourceID":63617,"targetID":63616},"63626":{"id":63626,"sourceID":63613,"targetID":63614},"63627":{"id":63627,"sourceID":63594,"targetID":63596},"63628":{"id":63628,"sourceID":63601,"targetID":63602},"63629":{"id":63629,"sourceID":63598,"targetID":63599},"63630":{"id":63630,"sourceID":63605,"targetID":63606}},"failureConnectors":{"63650":{"id":63650,"sourceID":63620,"targetID":63621},"63651":{"id":63651,"sourceID":63617,"targetID":63618},"63652":{"id":63652,"sourceID":63605,"targetID":63604},"63653":{"id":63653,"sourceID":63601,"targetID":63600},"63654":{"id":63654,"sourceID":63594,"targetID":63595},"63655":{"id":63655,"sourceID":63598,"targetID":63597},"63656":{"id":63656,"sourceID":63607,"targetID":63608},"63657":{"id":63657,"sourceID":63610,"targetID":63611},"63658":{"id":63658,"sourceID":63613,"targetID":63615}},"unconditionalConnectors":{"63631":{"id":63631,"sourceID":63606,"targetID":63617},"63632":{"id":63632,"sourceID":63609,"targetID":63620},"63633":{"id":63633,"sourceID":63604,"targetID":63606},"63634":{"id":63634,"sourceID":63608,"targetID":63609},"63635":{"id":63635,"sourceID":63614,"targetID":63603},"63636":{"id":63636,"sourceID":63618,"targetID":63616},"63637":{"id":63637,"sourceID":63597,"targetID":63599},"63638":{"id":63638,"sourceID":63599,"targetID":63601},"63639":{"id":63639,"sourceID":63600,"targetID":63602},"63640":{"id":63640,"sourceID":63596,"targetID":63598},"63641":{"id":63641,"sourceID":63619,"targetID":63610},"63642":{"id":63642,"sourceID":63595,"targetID":63596},"63643":{"id":63643,"sourceID":63615,"targetID":63614},"63644":{"id":63644,"sourceID":63593,"targetID":63594},"63645":{"id":63645,"sourceID":63611,"targetID":63612},"63646":{"id":63646,"sourceID":63602,"targetID":63605},"63647":{"id":63647,"sourceID":63621,"targetID":63619},"63648":{"id":63648,"sourceID":63616,"targetID":63607},"63649":{"id":63649,"sourceID":63612,"targetID":63613}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"63583":{"id":63583,"x":-468,"y":-322,"width":315,"height":89,"text":"Data integrity checks on flight event history table.\n\ncheck for duplicates, missing events and delayed event records\n\nUpdated on: 2019-11-12","colour":"e6e63c"},"63584":{"id":63584,"x":-463,"y":-153,"width":262,"height":304,"text":"A unique record in the flight event history is the combination of eventname, eventdatetimeutc, flightdate and flightnumber","colour":"e6e63c"},"63585":{"id":63585,"x":-151,"y":-147,"width":289,"height":301,"text":"When a flight (flight number, flight date, departure station, arrival station) is canceled only one event will exist for the cancellation in the flight event table","colour":"e6e63c"},"63586":{"id":63586,"x":176,"y":-141,"width":250,"height":295,"text":"When a flight (flight number, flight date, departure station, arrival station) arrives it can only have one arrival event","colour":"e6e63c"},"63587":{"id":63587,"x":460,"y":-144,"width":242,"height":300,"text":"Find missing events in flight event history for CANCEL FLIGHT' event","colour":"e6e63c"},"63588":{"id":63588,"x":958,"y":-176,"width":160,"height":325,"text":"Find missing events in flight event history table for the ARRIVAL event","colour":"e6e63c"},"63589":{"id":63589,"x":1349,"y":-178,"width":136,"height":335,"text":"Find duplicate ETA events in flight event history table","colour":"e6e63c"},"63590":{"id":63590,"x":1516,"y":-178,"width":164,"height":339,"text":"Find duplicate ETD events in flight event history table","colour":"e6e63c"},"63591":{"id":63591,"x":735,"y":-172,"width":183,"height":327,"text":"identify missing cancel event information in flight details","colour":"e6e63c"},"63592":{"id":63592,"x":1172,"y":-179,"width":141,"height":329,"text":"Find missing events in flight event history table for the ARRIVAL event","colour":"e6e63c"}},"variables":{},"grids":{}},"info":{"name":"DI - Flight Event History Data Checks","description":"","type":"ORCHESTRATION"}}